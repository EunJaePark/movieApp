{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp_ej/src/components/SimilarMovie.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp_ej/src/components/SimilarMovie.vue","mtime":1591842204953},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLy8g7LKrIOuyiOyosCDtgqTsm4zrk5zrqoUuCiAgICAgICAgICAgIGtleXdvcmRGaXJzdDogdGhpcy4kc3RvcmUuc3RhdGUua2V5d29yZEZpcnN0Qm94LnNlYXJjaFR4dCwKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICAvLyDssqsg67KI7Ke4IO2CpOybjOuTnOyXkCDtlbTri7ntlZjripQg7JiB7ZmUIOuqqeuhnSDtmLjstpwuCiAgICAgICAgZmlyc3RLZXl3b3JkKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuc2ltaWxhck1vdmllZGF0YTsKICAgICAgICB9LAogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgY29uc29sZS5sb2codGhpcy5rZXl3b3JkRmlyc3QpOwogICAgICAgIAogICAgICAgIC8vIEluZm9tQ29udHMudnVl7JeQ7IScIHN0b3Jl7JeQIOyggOyepe2VnCBrZXl3b3Jk7JmAIGNoZWNr67aI65+s7JmA7IScIGFwaeyXkCDrhKPslrTspIwuICjquLDsobQgYXBp6rWs7ZWY64qUIO2VqOyImCDtmJXsi53sl5Ag66ee7LaU64qQ6528IOyXrOufrCDrjbDsnbTthLDtmJXsi53snLzroZwg7IOd7ISx7ZWoKQogICAgICAgIGNvbnN0IGtleXdvcmRGaXJzdEJveCA9IHRoaXMuJHN0b3JlLnN0YXRlLmtleXdvcmRGaXJzdEJveDsKICAgICAgICBjb25zb2xlLmxvZyhrZXl3b3JkRmlyc3RCb3gpOwogICAgICAgIAogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdLRVlfU0lNSUxBUicsIGtleXdvcmRGaXJzdEJveCk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIC8vIOyyqyDrsojsp7gg7YKk7JuM65OcIOydtOumhOunjCDstpTstpwuKOyVnuyXkCDsoIHtnowgYXBp7JeQIO2VhOyalO2VnCB0eXBl64qUIOy2lOy2nOyViO2VqC4pCiAgICAgICAga2V5d29yZEVkaXQoa2V5d29yZCkgewogICAgICAgICAgICByZXR1cm4ga2V5d29yZC5zdWJzdHJpbmcoa2V5d29yZC5pbmRleE9mKCc9JykrMSwga2V5d29yZC5sZW5ndGgpOwogICAgICAgIH0sCiAgICAgICAgcG9zdGVyVVJMKHVybCkgeyAgICAgICAgICAgIAogICAgICAgICAgICBpZih1cmwgPT09ICcnKSB7ICAgLy8gdXJs7J20IOyXhuydhCDqsr3smrAKICAgICAgICAgICAgICAgIC8vIHBvc3RlciB1cmzso7zshozqsIAg7JeG7J2EIOqyveyasCDruYgg7J2066+47KeAIOy2lOy2nC4KICAgICAgICAgICAgICAgIHJldHVybiAnaHR0cDovL3BsYWNlaG9sZC5pdC8yMTN4MzAzJzsKICAgICAgICAgICAgfWVsc2UgaWYodXJsLmluZGV4T2YoJ3wnKSA9PT0gLTEpIHsgICAvLyB1cmzsnbQgMeqwnOydvCDqsr3smrAKICAgICAgICAgICAgICAgIHJldHVybiB1cmw7CiAgICAgICAgICAgIH1lbHNlIGlmKHVybC5pbmRleE9mKCd8JykpIHsgICAvLyB1cmzsnbQgMuqwnCDsnbTsg4Hsnbwg6rK97JqwICAKICAgICAgICAgICAgICAgIHJldHVybiB1cmwuc3Vic3RyaW5nKDAsIHVybC5pbmRleE9mKCd8JykpOyAKICAgICAgICAgICAgfSAKICAgICAgICB9LAogICAgICAgIC8vIG1vdmllSW5mb3JtKG1vdmllKSB7CiAgICAgICAgLy8gICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnQ0xJQ0tfTU9WSUUnLCBtb3ZpZSk7IAogICAgICAgIC8vICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2luZm9ybScpOwogICAgICAgIC8vIH0sCiAgICB9LAp9Cg=="},{"version":3,"sources":["SimilarMovie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SimilarMovie.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"similarMovie\" v-if=\"keywordFirst !== 'keyword=undefined'\">    \n      {{keywordFirst}}  \n        <p>비슷한 콘텐츠</p>\n        <span class=\"text\">( 오른쪽으로 스크롤 하면 순서대로 모든 영화 목록을 볼 수 있습니다. )</span>\n        <span class=\"samekey\"># {{ keywordEdit(keywordFirst) }}</span> \n\n        <div class=\"similarMovieBox\" v-if=\"firstKeyword.Data\">\n            <div class=\"movie\" v-for=\"(movie, index) in firstKeyword.Data[0].Result\" :key=\"index\">        \n                    <div class=\"imgTitle\">  <!--@click=\"movieInform(movie)\"-->\n                        <img                     \n                            v-bind:src=\"posterURL(movie.posters)\" \n                            v-bind:alt=\"movie.title\"\n                        />\n\n                        <div class=\"hoverBox\">\n                            <p class=\"director\">감독: {{ movie.directors.director[0].directorNm }}</p>\n                            <p class=\"story\" v-if=\"movie.plots.plot[0].plotText !== ''\">줄거리: {{ movie.plots.plot[0].plotText }}</p>\n                            <a v-bind:href=\"movie.kmdbUrl\" target=\"blanket\">상세정보 보기</a>\n                        </div>\n\n                    </div>\n\n                    <p class=\"title\">\n                        <span>{{ movie.title }}</span>\n                        <span class=\"year\">( {{ movie.prodYear }} )</span>\n                    </p>\n\n            </div><!--.similarMovie-->\n        </div><!--.similarMovieBox-->\n        <br/>\n        <!-- {{ firstKeyword.Data[0] }} -->\n  </div><!--.similarMovie-->\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            // 첫 번쨰 키워드명.\n            keywordFirst: this.$store.state.keywordFirstBox.searchTxt,\n        }\n    },\n    computed: {\n        // 첫 번째 키워드에 해당하는 영화 목록 호출.\n        firstKeyword() {\n            return this.$store.state.similarMoviedata;\n        },\n    },\n    created() {\n        console.log(this.keywordFirst);\n        \n        // InfomConts.vue에서 store에 저장한 keyword와 check불러와서 api에 넣어줌. (기존 api구하는 함수 형식에 맞추느라 여러 데이터형식으로 생성함)\n        const keywordFirstBox = this.$store.state.keywordFirstBox;\n        console.log(keywordFirstBox);\n        \n        this.$store.dispatch('KEY_SIMILAR', keywordFirstBox);\n    },\n    methods: {\n        // 첫 번째 키워드 이름만 추출.(앞에 적힌 api에 필요한 type는 추출안함.)\n        keywordEdit(keyword) {\n            return keyword.substring(keyword.indexOf('=')+1, keyword.length);\n        },\n        posterURL(url) {            \n            if(url === '') {   // url이 없을 경우\n                // poster url주소가 없을 경우 빈 이미지 추출.\n                return 'http://placehold.it/213x303';\n            }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n                return url;\n            }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n                return url.substring(0, url.indexOf('|')); \n            } \n        },\n        // movieInform(movie) {\n        //     this.$store.commit('CLICK_MOVIE', movie); \n        //     this.$router.push('/inform');\n        // },\n    },\n}\n</script>\n\n<style>\n\n</style>"]}]}