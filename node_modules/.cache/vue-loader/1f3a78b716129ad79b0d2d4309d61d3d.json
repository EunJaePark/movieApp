{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp/src/components/MovieConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp/src/components/MovieConts.vue","mtime":1590083304787},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGV2ZW50YnVzIH0gZnJvbSAnLi4vbWFpbic7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBjb21wdXRlZDogewogICAgICAgIG1vdmllZGF0YSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm1vdmllZGF0YTsKICAgICAgICB9LAogICAgICAgIGRhdGFJbk1vdmllZGF0YSgpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubW92aWVkYXRhLkRhdGE7CiAgICAgICAgfSwKICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIC8vIOydtOuypO2KuOuyhOyKpOuhnCBtYWluQ29udHPsl5DshJwg7J6F66Cl7ZWcIOqygOyDieyWtCDrtojrn6zsmLQuCiAgICAgICAgZXZlbnRidXMuJG9uKCdzZW5kU2VhcmNoJywgKHNlYXJjaFR4dCwgY2hlY2spID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coc2VhcmNoVHh0LCBjaGVjayk7CiAgICAgICAgICAgIHRoaXMubmV3TW92aWUoc2VhcmNoVHh0LCBjaGVjayk7CiAgICAgICAgfSkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgbmV3TW92aWUoc2VhcmNoVHh0LCBjaGVjaykgewogICAgICAgICAgICBjb25zb2xlLmxvZyhzZWFyY2hUeHQsIGNoZWNrKTsKICAgICAgICAgICAgCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCfsmIHtmZQg6rKA7IOJ7Ja0IOuwm+yVmOuLpCEhISEnKTsKICAgICAgICAgICAgY29uc3QgdHh0Q2hlY2sgPSB7c2VhcmNoVHh0LCBjaGVja307CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdGRVRDSF9USVRMRScsIHR4dENoZWNrKQogICAgICAgIH0KICAgIH0KCiAgICAvLyBjcmVhdGVkKCkgewogICAgLy8gICAgIGF4aW9zCiAgICAvLyAgICAgLmdldCgnIGh0dHA6Ly9hcGkua29yZWFmaWxtLm9yLmtyL29wZW5hcGktZGF0YTIvd2lzZW51dC9zZWFyY2hfYXBpL3NlYXJjaF94bWwyLmpzcD9jb2xsZWN0aW9uPWttZGJfbmV3MiZkZXRhaWw9TiZkaXJlY3Q9JUVCJUIwJTk1JUVDJUIwJUFDJUVDJTlBJUIxJlNlcnZpY2VLZXk9TTFOVjFCMTEwMUhaMzI4MlRSUFcnKQogICAgLy8gICAgIC50aGVuKHJlcyA9PiB7CiAgICAvLyAgICAgICAgIHRoaXMubW92aWVEYXRhID0gcmVzLmRhdGE7CiAgICAvLyAgICAgfSk7CiAgICAvLyB9Cn0K"},{"version":3,"sources":["MovieConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MovieConts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"movieConts\">\n    <h2>\" {{ moviedata.KMAQuery }} \"</h2>\n\n    <div class=\"dataBox clear\">\n        <div class=\"movies\" v-if=\"dataInMoviedata\">\n            <div \n                class=\"movie\"\n                v-for=\"(movie, index) in dataInMoviedata[0].Result \" :key=\"index\">\n                <div class=\"imgTitle\">\n                    <img src=\"\" alt=\"영화 포스터(url데이터없음)\"/>\n                    <p>제목: {{ dataInMoviedata[0].Result[index].title }}</p>\n                </div>\n                <ul class=\"textData\">\n                    <li>장르: {{ dataInMoviedata[0].Result[index].genre }}</li>\n                    <li>포스터url: {{ dataInMoviedata[0].Result[index].posterUrl }}</li>\n                    <li><a v-bind:href=\"dataInMoviedata[0].Result[index].kmdbUrl\">상세정보</a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    <!-- {{ moviedata }} -->\n  </div>\n</template>\n\n<script>\nimport { eventbus } from '../main';\n\nexport default {\n    computed: {\n        moviedata() {\n            return this.$store.state.moviedata;\n        },\n        dataInMoviedata() {\n            return this.moviedata.Data;\n        },\n    },\n    created() {\n        // 이벤트버스로 mainConts에서 입력한 검색어 불러옴.\n        eventbus.$on('sendSearch', (searchTxt, check) => {\n            console.log(searchTxt, check);\n            this.newMovie(searchTxt, check);\n        })\n    },\n    methods: {\n        newMovie(searchTxt, check) {\n            console.log(searchTxt, check);\n            \n            console.log('영화 검색어 받았다!!!!');\n            const txtCheck = {searchTxt, check};\n            this.$store.dispatch('FETCH_TITLE', txtCheck)\n        }\n    }\n\n    // created() {\n    //     axios\n    //     .get(' http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_xml2.jsp?collection=kmdb_new2&detail=N&direct=%EB%B0%95%EC%B0%AC%EC%9A%B1&ServiceKey=M1NV1B1101HZ3282TRPW')\n    //     .then(res => {\n    //         this.movieData = res.data;\n    //     });\n    // }\n}\n</script>\n\n<style>\n\n</style>"]}]}