{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue","mtime":1591795172697},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHNhdmVWYWx1ZSwgc2F2ZVR5cGUsIGRlbGV0ZUNvb2tpZSB9IGZyb20gJy4uL3V0aWxzL2Nvb2tpZXMnOwoKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWdJbmRleDogMCwKICAgICAga2V5d29yZEluZGV4OiAwLAogICAgICBzZWFyY2hUZXh0OiAnJywKICAgICAga2V5d29yZEZpcnN0OiAnJywgLy8g7YKk7JuM65OcIOykkSDssqsg67KI7Ke466eMIOy2lOy2nC4oU2ltaWxhck1vdmllLnZ1ZeuhnCDsoITri6ztlaAg6rKDKQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNsaWNrTW92aWVEYXRhKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuY2xpY2tNb3ZpZTsKICAgIH0sCiAgICAvLyBmaXJzdEtleXdvcmRBUEkoKSB7CiAgICAvLyAgIGNvbnN0IGtleXdvcmRGaXJzdEJveCA9IHsKICAgIC8vICAgICBzZWFyY2hUeHQgOiBga2V5d29yZD0ke3RoaXMua2V5d29yZEZpcnN0fWAsIAogICAgLy8gICAgIGNoZWNrIDoga2V5d29yZCwKICAgIC8vICAgfTsgCgogICAgLy8gICAvLyDrsJTroZwgc3RhdGXsl5Ag6rKB7IOJ7Ja0656RIOyytO2BrOuwleyKpO2ZleyduOuNsOydtO2EsCDrhKPslrTspJjrtIQuCiAgICAvLyAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU0lNSUxBUl9NT1ZJRV9BUEknLCBrZXl3b3JkRmlyc3RCb3gpOwogICAgLy8gfSwKICAgIC8vIHNpbWlsYXJNb3ZpZXMoKSB7CiAgICAvLyAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zaW1pbGFyTW92aWVkYXRhOwogICAgLy8gfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICAvLy0tLS0tLS0tLS0tLS0tLVNpbWlsYXJNb3ZpZS52dWXroZwg7LKrIOuyiOyosCDtgqTsm4zrk5zsmYAgY2hlY2sg64SY6rKo7KO86riwIOychO2VnCDsvZTrk5whISEhLS0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBsZXQga2V5ID0gdGhpcy5jbGlja01vdmllRGF0YS5rZXl3b3JkczsKICAgIAogICAgaWYoa2V5ID09PSAnJykgcmV0dXJuOwogICAgZWxzZSBpZihrZXkuaW5kZXhPZignLCcpID09PSAtMSkgewogICAgICByZXR1cm4ga2V5OwogICAgfQogICAgZWxzZSBpZihrZXkuaW5kZXhPZignLCcpKSB7CiAgICAgIGtleSA9IGtleS5zcGxpdCgnLCcpWzBdOwogICAgfQogICAgY29uc29sZS5sb2coa2V5KTsKICAKICAgIGNvbnN0IGtleXdvcmRGaXJzdEJveCA9IHsKICAgICAgc2VhcmNoVHh0IDogYGtleXdvcmQ9JHtrZXl9YCwgCiAgICAgIGNoZWNrIDogJ2tleXdvcmQnLAogICAgfTsgCiAgICAKCiAgICAvLyDrsJTroZwgc3RhdGXsl5Ag6rKB7IOJ7Ja0656RIOyytO2BrOuwleyKpO2ZleyduOuNsOydtO2EsCDrhKPslrTspJjrtIQuCiAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NJTUlMQVJfTU9WSUVfQVBJJywga2V5d29yZEZpcnN0Qm94KTsKICAgIGNvbnNvbGUubG9nKHRoaXMuJHN0b3JlLnN0YXRlLmtleXdvcmRGaXJzdEJveCk7CiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KICB9LAogIG1ldGhvZHM6IHsKICAgIHRleHRFZGl0KHRleHQpIHsKICAgICAgLy8g6rKA7IOJ7Ja066W8IOuCmO2DgOuCtOuKlCAhSEUsICFIU+q4gOyekCDsgq3soJwuCiAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoLyFIRXwhSFMvZywgJycpOwogICAgfSwKICAgIHBvc3RlclVSTCh1cmwpIHsgICAgICAgICAgICAKICAgICAgaWYodXJsID09PSAnJykgeyAgIC8vIHVybOydtCDsl4bsnYQg6rK97JqwCiAgICAgICAgLy8gcG9zdGVyIHVybOyjvOyGjOqwgCDsl4bsnYQg6rK97JqwIOu5iCDsnbTrr7jsp4Ag7LaU7LacLgogICAgICAgIHJldHVybiAnaHR0cDovL3BsYWNlaG9sZC5pdC8yMTN4MzAzJzsKICAgICAgfWVsc2UgaWYodXJsLmluZGV4T2YoJ3wnKSA9PT0gLTEpIHsgICAvLyB1cmzsnbQgMeqwnOydvCDqsr3smrAKICAgICAgICByZXR1cm4gdXJsOwogICAgICB9ZWxzZSBpZih1cmwuaW5kZXhPZignfCcpKSB7ICAgLy8gdXJs7J20IDLqsJwg7J207IOB7J28IOqyveyasCAgCiAgICAgICAgcmV0dXJuIHVybC5zdWJzdHJpbmcoMCwgdXJsLmluZGV4T2YoJ3wnKSk7IAogICAgICB9IAogICAgfSwKICAgIC8vIOyYge2ZlCDqsJzrtInsnbzsnpAg7Y647KeRLgogICAgZGF0ZUVkaXQoZGF0ZSkgewogICAgICByZXR1cm4gZGF0ZS5yZXBsYWNlKC8oXGR7NH0pKFxkezJ9KShcZHsyfSkvLCAnJDEuJDIuJDMnKTsKICAgICAgLy8gXGQgOiDsiKvsnpAg66y47J6Q6rCAIOyVhOuLjCDrrLjsnpDsl5Ag64yA7J2R65Cc64ukLiBbXjAtOV3smYAg64+Z7J287ZWY64ukLgogICAgICAvLyB7bn0gOiDslZ4g7ZGc7ZiE7Iud7J20IG7rsogg64KY7YOA64KY64qUIOu2gOu2hOyXkCDrjIDsnZHrkJzri6QuIG7snYAg67CY65Oc7IucIOyWkeydmCDsoJXsiJjsl6zslbwg7ZWc64ukLgogICAgICAvLyDspoksIFxkezR964qUIOyVnuyXkOyEnCA067KI7Ke46rmM7KeA7J2YIFswLTld6rmM7KeAIO2VtOuLue2VmOuKlCDsiKvsnpDrpbwg7KeA7Lmt7ZWY6rKMIOuQmOuKlCDqsoPsnbTri6QuCiAgICB9LAogICAgLy8g7KSE6rGw66asIOykkSDsoJzsnbwg7JWeIOusuOyepeunjCDstpTstpwuCiAgICBzbG9nYW5FZGl0KHN0b3J5KSB7CiAgICAgIHJldHVybiBzdG9yeS5zdWJzdHJpbmcoMCwgc3RvcnkuaW5kZXhPZignIScpKzEpOwogICAgfSwKICAgIC8vIOykhOqxsOumrCDspJEg7KCc7J28IOyVniDrrLjsnqUg7KCc7Jm47ZWcIOuCmOuouOyngCDrqqjrk6Ag7KSE6rGw66asIOy2lOy2nC4KICAgIHN0b3J5RWRpdChzdG9yeSkgewogICAgICByZXR1cm4gc3Rvcnkuc3Vic3RyaW5nKHN0b3J5LmluZGV4T2YoJyEnKSsxLCBzdG9yeS5sZW5ndGgpCiAgICB9LAogICAgLy8ga2V5d29yZCDqsJzsiJgg6rWs7ZWoLgogICAga2V5d29yZE51bShrZXkpIHsKICAgICAgaWYoa2V5ID09PSAnJykgewogICAgICAgIHJldHVybiB0aGlzLmtleXdvcmRJbmRleCA9IDA7CiAgICAgIH0gZWxzZSBpZihrZXkuaW5kZXhPZignLCcpID09PSAtMSkgewogICAgICAgIHJldHVybiB0aGlzLmtleXdvcmRJbmRleCA9IDE7CiAgICAgIH0gZWxzZSBpZihrZXkuaW5kZXhPZignLCcpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMua2V5d29yZEluZGV4ID0ga2V5Lm1hdGNoKC8sL2cpLmxlbmd0aCArIDE7CiAgICAgIH0gCiAgICB9LAogICAgLy8ga2V5d29yZO2VmOuCmOyUqSDrhKPslrTspIwuICsgZGF0YeydmCBrZXl3b3JkRmlyc3Tsl5Ag7LKrIOuyiOynuCDtgqTsm4zrk5wg64Sj7Ja07KSMLgogICAga2V5V29yZChrZXksIGluZGV4KSB7CiAgICAgIGlmKGtleSA9PT0gJycpIHJldHVybjsKICAgICAgZWxzZSBpZihrZXkuaW5kZXhPZignLCcpID09PSAtMSkgewogICAgICAgIHRoaXMua2V5d29yZEZpcnN0ID0ga2V5OwogICAgICAgIHJldHVybiBrZXk7CiAgICAgIH0KICAgICAgZWxzZSBpZihrZXkuaW5kZXhPZignLCcpKSB7CiAgICAgICAgdGhpcy5rZXl3b3JkRmlyc3QgPSBrZXkuc3BsaXQoJywnKVswXTsKICAgICAgICByZXR1cm4ga2V5LnNwbGl0KCcsJylbaW5kZXhdOwogICAgICB9CiAgICB9LAogICAgLy8g7Iqk7Yu47Lu3IGltZyDqsJzsiJgg7IS464qUIO2VqOyImC4KICAgIHBob3RvSW5kZXgocGhvdG9VcmwpIHsKICAgICAgaWYocGhvdG9VcmwgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaW1nSW5kZXggPSAwOwogICAgICB9IGVsc2UgaWYocGhvdG9VcmwuaW5kZXhPZignfCcpID09PSAtMSkgeyAgICAgCiAgICAgICAgcmV0dXJuIHRoaXMuaW1nSW5kZXggPSAxOwogICAgICB9IGVsc2UgaWYocGhvdG9VcmwuaW5kZXhPZignfCcpKSB7IC8vIGh0dHDsnZgg6rCc7IiY7JeQIOuUsOudvCB2LWZvcuydtOyaqe2VtCDsnbTrr7jsp4Ag7YOc6re4IOyDneyEsS4KICAgICAgICByZXR1cm4gdGhpcy5pbWdJbmRleCA9IHBob3RvVXJsLm1hdGNoKC9odHRwL2cpLmxlbmd0aDsKICAgICAgfQogICAgfSwKICAgIHN0bGxJbWdVUkwodXJsLCBpbmRleCkgeyAgICAgICAgICAgIAogICAgICBpZih1cmwgPT09ICcnKSB7ICAgLy8gdXJs7J20IOyXhuydhCDqsr3smrAKICAgICAgICAvLyBwb3N0ZXIgdXJs7KO87IaM6rCAIOyXhuydhCDqsr3smrAg67mIIOydtOuvuOyngCDstpTstpwuCiAgICAgICAgcmV0dXJuICdodHRwOi8vcGxhY2Vob2xkLml0LzE0NHg4Nic7CiAgICAgIH0gZWxzZSBpZih1cmwuaW5kZXhPZignfCcpID09PSAtMSkgeyAgIC8vIHVybOydtCAx6rCc7J28IOqyveyasAogICAgICAgIHJldHVybiB1cmw7CiAgICAgIH0gZWxzZSBpZih1cmwuaW5kZXhPZignfCcpKSB7ICAgLy8gdXJs7J20IDLqsJwg7J207IOB7J28IOqyveyasCAgCiAgICAgICAgcmV0dXJuIHVybC5zcGxpdCgnfCcpW2luZGV4XTsgIC8vIHNwbGl066W8IOydtOyaqe2VtCAnfCfrpbwg6riw7KSA7Jy866GcIHVybOydhCDrgpjriJQuIOq3uCDrkqTsl5Ag6rCBIGluZGV47JeQIOunnuuKlCDsgqzsp4R1cmzsnYQgcmV0dXJuLgogICAgICB9IAogICAgfSwKICAgIC8vIOuwsOyasCDsnbTrpoTsl5AgIUhFLCAhSFMg7KCc6rGw7ZW07KSMLgogICAgYWN0b3JFZGl0KG5hbWUpIHsKICAgICAgaWYobmFtZS5tYXRjaCgvIUhFIHwgIUhTL2dpKSkgcmV0dXJuIG5hbWUucmVwbGFjZSgvIUhFIHwgIUhTL2csICcnKTsKICAgICAgZWxzZSByZXR1cm4gbmFtZTsKICAgIH0sCgogICAgLy8ga2V5d29yZCDtgbTrpq3tlZjrqbQg7ZW064u5IO2CpOybjOuTnOuzhCDsmIHtmZTrqqnroZ0g67O07J206rKMIO2VqC4KICAgIGJ0blNlYXJjaChjaGVjaykgewogICAgICAvLyByb3V0ZXLsnbTrj5kg7KO87IaMIOuztOuCtOykjC4KICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9tb3ZpZScpOwoKICAgICAgLy8g7JiB7ZmU6rKA7IOJ7JyE7ZW0IOyeheugpe2VnCDqsoDsg4nslrQgKyDqsoDsg4ntg4DsnoUgY29va2ll7JeQIOyggOyepe2VtOykjC4KICAgICAgc2F2ZVZhbHVlKGBrZXl3b3JkPSR7dGhpcy5zZWFyY2hUZXh0fWApOwogICAgICBzYXZlVHlwZSh0aGlzLmNoZWNrKTsgCgogICAgICBjb25zdCBzZWFyY2hUeHRCb3ggPSB7CiAgICAgICAgc2VhcmNoVHh0IDogYGtleXdvcmQ9JHt0aGlzLnNlYXJjaFRleHR9YCwgCiAgICAgICAgY2hlY2sgOiBjaGVjaywKICAgICAgfTsKICAgICAgY29uc29sZS5sb2coc2VhcmNoVHh0Qm94KTsKICAgICAgICAgICAgCiAgICAgIC8vIOuwlOuhnCBzdGF0ZeyXkCDqsoHsg4nslrTrnpEg7LK07YGs67CV7Iqk7ZmV7J2444WH642w7J207YSwIOuEo+yWtOykmOu0hC4KICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdTVEFURV9VVEwnLCBzZWFyY2hUeHRCb3gpOwoKICAgICAgLy8gaW5wdXTssL0g67mE7JuM7KSMLgogICAgICB0aGlzLnNlYXJjaFRleHQgPSAnJzsKICAgIH0sCgogIH0KfQoK"},{"version":3,"sources":["InformConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA","file":"InformConts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"infromConts\" v-if=\"clickMovieData\">\n      <div class=\"topData clear\">\n        <img \n          class=\"poster\"                    \n          v-bind:src=\"posterURL(clickMovieData.posters)\" \n          v-bind:alt=\"textEdit(clickMovieData.title)\"\n        />\n        <div class=\"summaryBox\">\n          <div class=\"title\">\n            <h2>{{ textEdit(clickMovieData.title) }} ( {{ clickMovieData.prodYear }} )</h2>\n            <p class=\"engTitle\">{{ clickMovieData.titleEng }}</p>\n          </div><!--.title-->\n          <div class=\"textBox\">\n            <div class=\"textList\">\n              <span>{{ clickMovieData.genre }}</span>\n              <span>{{ clickMovieData.nation }}</span>\n            </div><!--.textInform-->\n            <div class=\"textList\">\n              <span>{{ `${dateEdit(clickMovieData.repRlsDate)} 개봉` }}</span>\n              <span>{{ clickMovieData.runtime }}분</span>\n              <span>{{ clickMovieData.rating }}</span>\n            </div><!--.textInform-->\n            <p v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">(감독) {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n\n            <a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">영화 상세정보</a>\n          </div><!--.textBox-->\n          <br/>\n          <!-- <p>영상url: {{ clickMovieData.vods.vod[0].vodUrl }}</p>\n          <video :src=\"clickMovieData.vods.vod[0].vodUrl\"></video> -->\n          <br/>\n        </div><!--.summaryBox-->\n      </div><!--.topData-->\n\n      <div class=\"detailBox\">\n        <!-- 한문장의 슬로건(줄거리 중 첫 문장!)-->\n        <p \n          class=\"movieSlogan\"\n          v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n          {{ sloganEdit(clickMovieData.plots.plot[0].plotText) }}\n        </p>\n        <!-- 줄거리 -->\n          <p\n            class=\"movieStory\" \n            v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n            {{ storyEdit(clickMovieData.plots.plot[0].plotText) }}\n          </p>\n\n          <div class=\"movieKeyword\" v-if=\"clickMovieData.keywords\">\n            <form @click=\"btnSearch('keywordCK')\">\n              <button \n                v-for=\"(keyword, keywordIndex) in keywordNum(clickMovieData.keywords)\" :key=\"keywordIndex\"\n                @click=\"searchText = keyWord(clickMovieData.keywords, keywordIndex)\">\n                {{ `# ${keyWord(clickMovieData.keywords, keywordIndex)}` }}\n              </button>\n            </form>\n          </div>\n          \n          <div class=\"movieStlls\" v-if=\"clickMovieData.stlls\">\n            <p>{{ `${photoIndex(clickMovieData.stlls)}장의 스틸컷` }}</p>\n            <div  v-for=\"(photo, imgIndex) in photoIndex(clickMovieData.stlls)\" :key=\"imgIndex\" >\n              <img :src=\"stllImgURL(clickMovieData.stlls, imgIndex)\" alt=\"\" />\n              <!-- {{ imgIndex }} -->\n            </div>\n          </div>\n\n          <div class=\"movieActor clear\" v-if=\" clickMovieData.actors.actor[0].actorNm\">\n            <p>출연 / 스탭</p>\n            <div\n              v-for=\"(actorName, index) in clickMovieData.actors.actor\" \n              v-bind:key=\"index\"><!--key를 actorName.actorId로 주니까 데이터 자체에 같은 배우명단이 2개인 경우가 있어서 actorId가 중복된다는 error가 발생. 일단 에러 없애기 위해서 key를 임의의 index로 주었다.-->\n                  <span class=\"krNm\">{{ actorEdit(actorName.actorNm) }} </span>\n                  <br/>\n                  <span class=\"enNm\">{{ actorEdit(actorName.actorEnNm) }}</span> \n            </div>\n          </div>\n      </div><!--.detailBox-->\n      \n      <br/>\n      <!-- <div style=\"border:2px solid red;\">클릭한 id 영화 데이터: {{ clickMovieData }}</div> -->\n      \n  </div>\n</template>\n\n<script>\nimport { saveValue, saveType, deleteCookie } from '../utils/cookies';\n\nexport default {\n  data() {\n    return {\n      imgIndex: 0,\n      keywordIndex: 0,\n      searchText: '',\n      keywordFirst: '', // 키워드 중 첫 번째만 추출.(SimilarMovie.vue로 전달할 것)\n    }\n  },\n  computed: {\n    clickMovieData() {\n      return this.$store.state.clickMovie;\n    },\n    // firstKeywordAPI() {\n    //   const keywordFirstBox = {\n    //     searchTxt : `keyword=${this.keywordFirst}`, \n    //     check : keyword,\n    //   }; \n\n    //   // 바로 state에 겁색어랑 체크박스확인데이터 넣어줘봄.\n    //   this.$store.commit('SIMILAR_MOVIE_API', keywordFirstBox);\n    // },\n    // similarMovies() {\n    //   return this.$store.state.similarMoviedata;\n    // },\n  },\n  created() {\n    //---------------SimilarMovie.vue로 첫 번쨰 키워드와 check 넘겨주기 위한 코드!!!!---------------------\n    let key = this.clickMovieData.keywords;\n    \n    if(key === '') return;\n    else if(key.indexOf(',') === -1) {\n      return key;\n    }\n    else if(key.indexOf(',')) {\n      key = key.split(',')[0];\n    }\n    console.log(key);\n  \n    const keywordFirstBox = {\n      searchTxt : `keyword=${key}`, \n      check : 'keyword',\n    }; \n    \n\n    // 바로 state에 겁색어랑 체크박스확인데이터 넣어줘봄.\n    this.$store.commit('SIMILAR_MOVIE_API', keywordFirstBox);\n    console.log(this.$store.state.keywordFirstBox);\n    //-------------------------------------------------------------------------------------------\n  },\n  methods: {\n    textEdit(text) {\n      // 검색어를 나타내는 !HE, !HS글자 삭제.\n      return text.replace(/!HE|!HS/g, '');\n    },\n    posterURL(url) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/213x303';\n      }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.substring(0, url.indexOf('|')); \n      } \n    },\n    // 영화 개봉일자 편집.\n    dateEdit(date) {\n      return date.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1.$2.$3');\n      // \\d : 숫자 문자가 아닌 문자에 대응된다. [^0-9]와 동일하다.\n      // {n} : 앞 표현식이 n번 나타나는 부분에 대응된다. n은 반드시 양의 정수여야 한다.\n      // 즉, \\d{4}는 앞에서 4번째까지의 [0-9]까지 해당하는 숫자를 지칭하게 되는 것이다.\n    },\n    // 줄거리 중 제일 앞 문장만 추출.\n    sloganEdit(story) {\n      return story.substring(0, story.indexOf('!')+1);\n    },\n    // 줄거리 중 제일 앞 문장 제외한 나머지 모든 줄거리 추출.\n    storyEdit(story) {\n      return story.substring(story.indexOf('!')+1, story.length)\n    },\n    // keyword 개수 구함.\n    keywordNum(key) {\n      if(key === '') {\n        return this.keywordIndex = 0;\n      } else if(key.indexOf(',') === -1) {\n        return this.keywordIndex = 1;\n      } else if(key.indexOf(',')) {\n        return this.keywordIndex = key.match(/,/g).length + 1;\n      } \n    },\n    // keyword하나씩 넣어줌. + data의 keywordFirst에 첫 번째 키워드 넣어줌.\n    keyWord(key, index) {\n      if(key === '') return;\n      else if(key.indexOf(',') === -1) {\n        this.keywordFirst = key;\n        return key;\n      }\n      else if(key.indexOf(',')) {\n        this.keywordFirst = key.split(',')[0];\n        return key.split(',')[index];\n      }\n    },\n    // 스틸컷 img 개수 세는 함수.\n    photoIndex(photoUrl) {\n      if(photoUrl === '') {\n        return this.imgIndex = 0;\n      } else if(photoUrl.indexOf('|') === -1) {     \n        return this.imgIndex = 1;\n      } else if(photoUrl.indexOf('|')) { // http의 개수에 따라 v-for이용해 이미지 태그 생성.\n        return this.imgIndex = photoUrl.match(/http/g).length;\n      }\n    },\n    stllImgURL(url, index) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/144x86';\n      } else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      } else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.split('|')[index];  // split를 이용해 '|'를 기준으로 url을 나눔. 그 뒤에 각 index에 맞는 사진url을 return.\n      } \n    },\n    // 배우 이름에 !HE, !HS 제거해줌.\n    actorEdit(name) {\n      if(name.match(/!HE | !HS/gi)) return name.replace(/!HE | !HS/g, '');\n      else return name;\n    },\n\n    // keyword 클릭하면 해당 키워드별 영화목록 보이게 함.\n    btnSearch(check) {\n      // router이동 주소 보내줌.\n      this.$router.push('/movie');\n\n      // 영화검색위해 입력한 검색어 + 검색타입 cookie에 저장해줌.\n      saveValue(`keyword=${this.searchText}`);\n      saveType(this.check); \n\n      const searchTxtBox = {\n        searchTxt : `keyword=${this.searchText}`, \n        check : check,\n      };\n      console.log(searchTxtBox);\n            \n      // 바로 state에 겁색어랑 체크박스확인ㅇ데이터 넣어줘봄.\n      this.$store.commit('STATE_UTL', searchTxtBox);\n\n      // input창 비워줌.\n      this.searchText = '';\n    },\n\n  }\n}\n\n</script>\n\n<style>\n\n</style>"]}]}