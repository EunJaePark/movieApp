{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue","mtime":1591374928873},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW1nSW5kZXg6IDAsCiAgICAgIGtleXdvcmRJbmRleDogMCwKICAgICAgc2VhcmNoVGV4dDogJycsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgY2xpY2tNb3ZpZURhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jbGlja01vdmllOwogICAgfQogIH0sCiAgCiAgbWV0aG9kczogewogICAgdGV4dEVkaXQodGV4dCkgewogICAgICAvLyDqsoDsg4nslrTrpbwg64KY7YOA64K064qUICFIRSwgIUhT6riA7J6QIOyCreygnC4KICAgICAgcmV0dXJuIHRleHQucmVwbGFjZSgvIUhFfCFIUy9nLCAnJyk7CiAgICB9LAogICAgcG9zdGVyVVJMKHVybCkgeyAgICAgICAgICAgIAogICAgICBpZih1cmwgPT09ICcnKSB7ICAgLy8gdXJs7J20IOyXhuydhCDqsr3smrAKICAgICAgICAvLyBwb3N0ZXIgdXJs7KO87IaM6rCAIOyXhuydhCDqsr3smrAg67mIIOydtOuvuOyngCDstpTstpwuCiAgICAgICAgcmV0dXJuICdodHRwOi8vcGxhY2Vob2xkLml0LzIxM3gzMDMnOwogICAgICB9ZWxzZSBpZih1cmwuaW5kZXhPZignfCcpID09PSAtMSkgeyAgIC8vIHVybOydtCAx6rCc7J28IOqyveyasAogICAgICAgIHJldHVybiB1cmw7CiAgICAgIH1lbHNlIGlmKHVybC5pbmRleE9mKCd8JykpIHsgICAvLyB1cmzsnbQgMuqwnCDsnbTsg4Hsnbwg6rK97JqwICAKICAgICAgICByZXR1cm4gdXJsLnN1YnN0cmluZygwLCB1cmwuaW5kZXhPZignfCcpKTsgCiAgICAgIH0gCiAgICB9LAogICAgLy8g7JiB7ZmUIOqwnOu0ieydvOyekCDtjrjsp5EuCiAgICBkYXRlRWRpdChkYXRlKSB7CiAgICAgIHJldHVybiBkYXRlLnJlcGxhY2UoLyhcZHs0fSkoXGR7Mn0pKFxkezJ9KS8sICckMS4kMi4kMycpOwogICAgICAvLyBcZCA6IOyIq+yekCDrrLjsnpDqsIAg7JWE64uMIOusuOyekOyXkCDrjIDsnZHrkJzri6QuIFteMC05XeyZgCDrj5nsnbztlZjri6QuCiAgICAgIC8vIHtufSA6IOyVniDtkZztmITsi53snbQgbuuyiCDrgpjtg4DrgpjripQg67aA67aE7JeQIOuMgOydkeuQnOuLpC4gbuydgCDrsJjrk5zsi5wg7JaR7J2YIOygleyImOyXrOyVvCDtlZzri6QuCiAgICAgIC8vIOymiSwgXGR7NH3ripQg7JWe7JeQ7IScIDTrsojsp7jquYzsp4DsnZggWzAtOV3quYzsp4Ag7ZW064u57ZWY64qUIOyIq+yekOulvCDsp4Dsua3tlZjqsowg65CY64qUIOqyg+ydtOuLpC4KICAgIH0sCiAgICAvLyDspITqsbDrpqwg7KSRIOygnOydvCDslZ4g66y47J6l66eMIOy2lOy2nC4KICAgIHNsb2dhbkVkaXQoc3RvcnkpIHsKICAgICAgcmV0dXJuIHN0b3J5LnN1YnN0cmluZygwLCBzdG9yeS5pbmRleE9mKCchJykrMSk7CiAgICB9LAogICAgLy8g7KSE6rGw66asIOykkSDsoJzsnbwg7JWeIOusuOyepSDsoJzsmbjtlZwg64KY66i47KeAIOuqqOuToCDspITqsbDrpqwg7LaU7LacLgogICAgc3RvcnlFZGl0KHN0b3J5KSB7CiAgICAgIHJldHVybiBzdG9yeS5zdWJzdHJpbmcoc3RvcnkuaW5kZXhPZignIScpKzEsIHN0b3J5Lmxlbmd0aCkKICAgIH0sCiAgICAvLyBrZXl3b3JkIOqwnOyImCDqtaztlaguCiAgICBrZXl3b3JkTnVtKGtleSkgewogICAgICBpZihrZXkgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMua2V5d29yZEluZGV4ID0gMDsKICAgICAgfSBlbHNlIGlmKGtleS5pbmRleE9mKCcsJykgPT09IC0xKSB7CiAgICAgICAgcmV0dXJuIHRoaXMua2V5d29yZEluZGV4ID0gMTsKICAgICAgfSBlbHNlIGlmKGtleS5pbmRleE9mKCcsJykpIHsKICAgICAgICByZXR1cm4gdGhpcy5rZXl3b3JkSW5kZXggPSBrZXkubWF0Y2goLywvZykubGVuZ3RoICsgMTsKICAgICAgfSAKICAgIH0sCiAgICAvLyBrZXl3b3Jk7ZWY64KY7JSpIOuEo+yWtOykjC4KICAgIGtleVdvcmQoa2V5LCBpbmRleCkgewogICAgICBpZihrZXkgPT09ICcnKSByZXR1cm47CiAgICAgIGVsc2UgaWYoa2V5LmluZGV4T2YoJywnKSA9PT0gLTEpIHJldHVybiBrZXk7CiAgICAgIGVsc2UgaWYoa2V5LmluZGV4T2YoJywnKSkgcmV0dXJuIGtleS5zcGxpdCgnLCcpW2luZGV4XTsKICAgIH0sCiAgICAvLyDsiqTti7jsu7cgaW1nIOqwnOyImCDshLjripQg7ZWo7IiYLgogICAgcGhvdG9JbmRleChwaG90b1VybCkgewogICAgICBpZihwaG90b1VybCA9PT0gJycpIHsKICAgICAgICByZXR1cm4gdGhpcy5pbWdJbmRleCA9IDA7CiAgICAgIH0gZWxzZSBpZihwaG90b1VybC5pbmRleE9mKCd8JykgPT09IC0xKSB7ICAgICAKICAgICAgICByZXR1cm4gdGhpcy5pbWdJbmRleCA9IDE7CiAgICAgIH0gZWxzZSBpZihwaG90b1VybC5pbmRleE9mKCd8JykpIHsgLy8gaHR0cOydmCDqsJzsiJjsl5Ag65Sw6528IHYtZm9y7J207Jqp7ZW0IOydtOuvuOyngCDtg5zqt7gg7IOd7ISxLgogICAgICAgIHJldHVybiB0aGlzLmltZ0luZGV4ID0gcGhvdG9VcmwubWF0Y2goL2h0dHAvZykubGVuZ3RoOwogICAgICB9CiAgICB9LAogICAgc3RsbEltZ1VSTCh1cmwsIGluZGV4KSB7ICAgICAgICAgICAgCiAgICAgIGlmKHVybCA9PT0gJycpIHsgICAvLyB1cmzsnbQg7JeG7J2EIOqyveyasAogICAgICAgIC8vIHBvc3RlciB1cmzso7zshozqsIAg7JeG7J2EIOqyveyasCDruYgg7J2066+47KeAIOy2lOy2nC4KICAgICAgICByZXR1cm4gJ2h0dHA6Ly9wbGFjZWhvbGQuaXQvMTQ0eDg2JzsKICAgICAgfSBlbHNlIGlmKHVybC5pbmRleE9mKCd8JykgPT09IC0xKSB7ICAgLy8gdXJs7J20IDHqsJzsnbwg6rK97JqwCiAgICAgICAgcmV0dXJuIHVybDsKICAgICAgfSBlbHNlIGlmKHVybC5pbmRleE9mKCd8JykpIHsgICAvLyB1cmzsnbQgMuqwnCDsnbTsg4Hsnbwg6rK97JqwICAKICAgICAgICByZXR1cm4gdXJsLnNwbGl0KCd8JylbaW5kZXhdOyAgLy8gc3BsaXTrpbwg7J207Jqp7ZW0ICd8J+ulvCDquLDspIDsnLzroZwgdXJs7J2EIOuCmOuIlC4g6re4IOuSpOyXkCDqsIEgaW5kZXjsl5Ag66ee64qUIOyCrOynhHVybOydhCByZXR1cm4uCiAgICAgIH0gCiAgICB9LAogICAgLy8g67Cw7JqwIOydtOumhOyXkCAhSEUsICFIUyDsoJzqsbDtlbTspIwuCiAgICBhY3RvckVkaXQobmFtZSkgewogICAgICBpZihuYW1lLm1hdGNoKC8hSEUgfCAhSFMvZ2kpKSByZXR1cm4gbmFtZS5yZXBsYWNlKC8hSEUgfCAhSFMvZywgJycpOwogICAgICBlbHNlIHJldHVybiBuYW1lOwogICAgfSwKCiAgICAvLyBrZXl3b3JkIO2BtOumre2VmOuptCDtlbTri7kg7YKk7JuM65Oc67OEIOyYge2ZlOuqqeuhnSDrs7TsnbTqsowg7ZWoLgogICAgYnRuU2VhcmNoKGNoZWNrKSB7CiAgICAgIC8vIHJvdXRlcuydtOuPmSDso7zshowg67O064K07KSMLgogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL21vdmllJyk7CgogICAgICBjb25zdCBzZWFyY2hUeHQgPSB7CiAgICAgICAgc2VhcmNoVHh0IDogdGhpcy5zZWFyY2hUZXh0LCAKICAgICAgICBjaGVjayA6IGNoZWNrLAogICAgICB9OwogICAgICBjb25zb2xlLmxvZyhzZWFyY2hUeHQpOwogICAgICAgICAgICAKICAgICAgLy8g67CU66GcIHN0YXRl7JeQIOqygeyDieyWtOuekSDssrTtgazrsJXsiqTtmZXsnbjjhYfrjbDsnbTthLAg64Sj7Ja07KSY67SELgogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NUQVRFX1VUTCcsIHNlYXJjaFR4dCk7CgogICAgICAvLyBpbnB1dOywvSDruYTsm4zspIwuCiAgICAgIHRoaXMuc2VhcmNoVGV4dCA9ICcnOwogICAgfQogIH0KfQoK"},{"version":3,"sources":["InformConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"InformConts.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"infromConts\" v-if=\"clickMovieData\">\n      <div class=\"topData clear\">\n        <img \n          class=\"poster\"                    \n          v-bind:src=\"posterURL(clickMovieData.posters)\" \n          v-bind:alt=\"textEdit(clickMovieData.title)\"\n        />\n        <div class=\"summaryBox\">\n          <div class=\"title\">\n            <h2>{{ textEdit(clickMovieData.title) }} ( {{ clickMovieData.prodYear }} )</h2>\n            <p class=\"engTitle\">{{ clickMovieData.titleEng }}</p>\n          </div><!--.title-->\n          <div class=\"textBox\">\n            <div class=\"textList\">\n              <span>{{ clickMovieData.genre }}</span>\n              <span>{{ clickMovieData.nation }}</span>\n            </div><!--.textInform-->\n            <div class=\"textList\">\n              <span>{{ `${dateEdit(clickMovieData.repRlsDate)} 개봉` }}</span>\n              <span>{{ clickMovieData.runtime }}분</span>\n              <span>{{ clickMovieData.rating }}</span>\n            </div><!--.textInform-->\n            <p v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">(감독) {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n\n            <a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">영화 상세정보</a>\n          </div><!--.textBox-->\n          <br/>\n          <!-- <p>영상url: {{ clickMovieData.vods.vod[0].vodUrl }}</p>\n          <video :src=\"clickMovieData.vods.vod[0].vodUrl\"></video> -->\n          <br/>\n        </div><!--.summaryBox-->\n      </div><!--.topData-->\n\n      <div class=\"detailBox\">\n        <!-- 한문장의 슬로건(줄거리 중 첫 문장!)-->\n        <p \n          class=\"movieSlogan\"\n          v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n          {{ sloganEdit(clickMovieData.plots.plot[0].plotText) }}\n        </p>\n        <!-- 줄거리 -->\n          <p\n            class=\"movieStory\" \n            v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n            {{ storyEdit(clickMovieData.plots.plot[0].plotText) }}\n          </p>\n\n          <div class=\"movieKeyword\" v-if=\"clickMovieData.keywords\">\n            <form @click=\"btnSearch('keywordCK')\">\n              <button \n                v-for=\"(keyword, keywordIndex) in keywordNum(clickMovieData.keywords)\" :key=\"keywordIndex\"\n                @click=\"searchText = keyWord(clickMovieData.keywords, keywordIndex)\">\n                {{ `# ${keyWord(clickMovieData.keywords, keywordIndex)}` }}\n              </button>\n            </form>\n          </div>\n          \n          <div class=\"movieStlls\" v-if=\"clickMovieData.stlls\">\n            <p>{{ `${photoIndex(clickMovieData.stlls)}장의 스틸컷` }}</p>\n            <div  v-for=\"(photo, imgIndex) in photoIndex(clickMovieData.stlls)\" :key=\"imgIndex\" >\n              <img :src=\"stllImgURL(clickMovieData.stlls, imgIndex)\" alt=\"\" />\n              <!-- {{ imgIndex }} -->\n            </div>\n          </div>\n\n          <div class=\"movieActor clear\" v-if=\" clickMovieData.actors.actor[0].actorNm\">\n            <p>출연 / 스탭</p>\n            <div\n              v-for=\"(actorName, index) in clickMovieData.actors.actor\" \n              v-bind:key=\"index\"><!--key를 actorName.actorId로 주니까 데이터 자체에 같은 배우명단이 2개인 경우가 있어서 actorId가 중복된다는 error가 발생. 일단 에러 없애기 위해서 key를 임의의 index로 주었다.-->\n                  <span class=\"krNm\">{{ actorEdit(actorName.actorNm) }} </span>\n                  <br/>\n                  <span class=\"enNm\">{{ actorEdit(actorName.actorEnNm) }}</span> \n            </div>\n          </div>\n\n\n          <!-- <p><a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">상세정보</a></p> -->\n      </div><!--.detailBox-->\n      \n      <br/>\n      <!-- <div style=\"border:2px solid red;\">클릭한 id 영화 데이터: {{ clickMovieData }}</div> -->\n      \n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      imgIndex: 0,\n      keywordIndex: 0,\n      searchText: '',\n    }\n  },\n  computed: {\n    clickMovieData() {\n      return this.$store.state.clickMovie;\n    }\n  },\n  \n  methods: {\n    textEdit(text) {\n      // 검색어를 나타내는 !HE, !HS글자 삭제.\n      return text.replace(/!HE|!HS/g, '');\n    },\n    posterURL(url) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/213x303';\n      }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.substring(0, url.indexOf('|')); \n      } \n    },\n    // 영화 개봉일자 편집.\n    dateEdit(date) {\n      return date.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1.$2.$3');\n      // \\d : 숫자 문자가 아닌 문자에 대응된다. [^0-9]와 동일하다.\n      // {n} : 앞 표현식이 n번 나타나는 부분에 대응된다. n은 반드시 양의 정수여야 한다.\n      // 즉, \\d{4}는 앞에서 4번째까지의 [0-9]까지 해당하는 숫자를 지칭하게 되는 것이다.\n    },\n    // 줄거리 중 제일 앞 문장만 추출.\n    sloganEdit(story) {\n      return story.substring(0, story.indexOf('!')+1);\n    },\n    // 줄거리 중 제일 앞 문장 제외한 나머지 모든 줄거리 추출.\n    storyEdit(story) {\n      return story.substring(story.indexOf('!')+1, story.length)\n    },\n    // keyword 개수 구함.\n    keywordNum(key) {\n      if(key === '') {\n        return this.keywordIndex = 0;\n      } else if(key.indexOf(',') === -1) {\n        return this.keywordIndex = 1;\n      } else if(key.indexOf(',')) {\n        return this.keywordIndex = key.match(/,/g).length + 1;\n      } \n    },\n    // keyword하나씩 넣어줌.\n    keyWord(key, index) {\n      if(key === '') return;\n      else if(key.indexOf(',') === -1) return key;\n      else if(key.indexOf(',')) return key.split(',')[index];\n    },\n    // 스틸컷 img 개수 세는 함수.\n    photoIndex(photoUrl) {\n      if(photoUrl === '') {\n        return this.imgIndex = 0;\n      } else if(photoUrl.indexOf('|') === -1) {     \n        return this.imgIndex = 1;\n      } else if(photoUrl.indexOf('|')) { // http의 개수에 따라 v-for이용해 이미지 태그 생성.\n        return this.imgIndex = photoUrl.match(/http/g).length;\n      }\n    },\n    stllImgURL(url, index) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/144x86';\n      } else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      } else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.split('|')[index];  // split를 이용해 '|'를 기준으로 url을 나눔. 그 뒤에 각 index에 맞는 사진url을 return.\n      } \n    },\n    // 배우 이름에 !HE, !HS 제거해줌.\n    actorEdit(name) {\n      if(name.match(/!HE | !HS/gi)) return name.replace(/!HE | !HS/g, '');\n      else return name;\n    },\n\n    // keyword 클릭하면 해당 키워드별 영화목록 보이게 함.\n    btnSearch(check) {\n      // router이동 주소 보내줌.\n      this.$router.push('/movie');\n\n      const searchTxt = {\n        searchTxt : this.searchText, \n        check : check,\n      };\n      console.log(searchTxt);\n            \n      // 바로 state에 겁색어랑 체크박스확인ㅇ데이터 넣어줘봄.\n      this.$store.commit('STATE_UTL', searchTxt);\n\n      // input창 비워줌.\n      this.searchText = '';\n    }\n  }\n}\n\n</script>\n\n<style>\n\n</style>"]}]}