{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue","mtime":1591071296349},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbWdJbmRleDogMCwKICAgICAga2V5d29yZEluZGV4OiAwLAogICAgICBzZWFyY2hUZXh0OiAnJwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBjbGlja01vdmllRGF0YTogZnVuY3Rpb24gY2xpY2tNb3ZpZURhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jbGlja01vdmllOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdGV4dEVkaXQ6IGZ1bmN0aW9uIHRleHRFZGl0KHRleHQpIHsKICAgICAgLy8g6rKA7IOJ7Ja066W8IOuCmO2DgOuCtOuKlCAhSEUsICFIU+q4gOyekCDsgq3soJwuCiAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoLyFIRXwhSFMvZywgJycpOwogICAgfSwKICAgIHBvc3RlclVSTDogZnVuY3Rpb24gcG9zdGVyVVJMKHVybCkgewogICAgICBpZiAodXJsID09PSAnJykgewogICAgICAgIC8vIHVybOydtCDsl4bsnYQg6rK97JqwCiAgICAgICAgLy8gcG9zdGVyIHVybOyjvOyGjOqwgCDsl4bsnYQg6rK97JqwIOu5iCDsnbTrr7jsp4Ag7LaU7LacLgogICAgICAgIHJldHVybiAnaHR0cDovL3BsYWNlaG9sZC5pdC8yMTN4MzAzJzsKICAgICAgfSBlbHNlIGlmICh1cmwuaW5kZXhPZignfCcpID09PSAtMSkgewogICAgICAgIC8vIHVybOydtCAx6rCc7J28IOqyveyasAogICAgICAgIHJldHVybiB1cmw7CiAgICAgIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ3wnKSkgewogICAgICAgIC8vIHVybOydtCAy6rCcIOydtOyDgeydvCDqsr3smrAgIAogICAgICAgIHJldHVybiB1cmwuc3Vic3RyaW5nKDAsIHVybC5pbmRleE9mKCd8JykpOwogICAgICB9CiAgICB9LAogICAgLy8g7JiB7ZmUIOqwnOu0ieydvOyekCDtjrjsp5EuCiAgICBkYXRlRWRpdDogZnVuY3Rpb24gZGF0ZUVkaXQoZGF0ZSkgewogICAgICByZXR1cm4gZGF0ZS5yZXBsYWNlKC8oXGR7NH0pKFxkezJ9KShcZHsyfSkvLCAnJDEuJDIuJDMnKTsgLy8gXGQgOiDsiKvsnpAg66y47J6Q6rCAIOyVhOuLjCDrrLjsnpDsl5Ag64yA7J2R65Cc64ukLiBbXjAtOV3smYAg64+Z7J287ZWY64ukLgogICAgICAvLyB7bn0gOiDslZ4g7ZGc7ZiE7Iud7J20IG7rsogg64KY7YOA64KY64qUIOu2gOu2hOyXkCDrjIDsnZHrkJzri6QuIG7snYAg67CY65Oc7IucIOyWkeydmCDsoJXsiJjsl6zslbwg7ZWc64ukLgogICAgICAvLyDspoksIFxkezR964qUIOyVnuyXkOyEnCA067KI7Ke46rmM7KeA7J2YIFswLTld6rmM7KeAIO2VtOuLue2VmOuKlCDsiKvsnpDrpbwg7KeA7Lmt7ZWY6rKMIOuQmOuKlCDqsoPsnbTri6QuCiAgICB9LAogICAgLy8g7KSE6rGw66asIOykkSDsoJzsnbwg7JWeIOusuOyepeunjCDstpTstpwuCiAgICBzbG9nYW5FZGl0OiBmdW5jdGlvbiBzbG9nYW5FZGl0KHN0b3J5KSB7CiAgICAgIHJldHVybiBzdG9yeS5zdWJzdHJpbmcoMCwgc3RvcnkuaW5kZXhPZignIScpICsgMSk7CiAgICB9LAogICAgLy8g7KSE6rGw66asIOykkSDsoJzsnbwg7JWeIOusuOyepSDsoJzsmbjtlZwg64KY66i47KeAIOuqqOuToCDspITqsbDrpqwg7LaU7LacLgogICAgc3RvcnlFZGl0OiBmdW5jdGlvbiBzdG9yeUVkaXQoc3RvcnkpIHsKICAgICAgcmV0dXJuIHN0b3J5LnN1YnN0cmluZyhzdG9yeS5pbmRleE9mKCchJykgKyAxLCBzdG9yeS5sZW5ndGgpOwogICAgfSwKICAgIC8vIGtleXdvcmQg6rCc7IiYIOq1rO2VqC4KICAgIGtleXdvcmROdW06IGZ1bmN0aW9uIGtleXdvcmROdW0oa2V5KSB7CiAgICAgIGlmIChrZXkgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMua2V5d29yZEluZGV4ID0gMDsKICAgICAgfSBlbHNlIGlmIChrZXkuaW5kZXhPZignLCcpID09PSAtMSkgewogICAgICAgIHJldHVybiB0aGlzLmtleXdvcmRJbmRleCA9IDE7CiAgICAgIH0gZWxzZSBpZiAoa2V5LmluZGV4T2YoJywnKSkgewogICAgICAgIHJldHVybiB0aGlzLmtleXdvcmRJbmRleCA9IGtleS5tYXRjaCgvLC9nKS5sZW5ndGggKyAxOwogICAgICB9CiAgICB9LAogICAgLy8ga2V5d29yZO2VmOuCmOyUqSDrhKPslrTspIwuCiAgICBrZXlXb3JkOiBmdW5jdGlvbiBrZXlXb3JkKGtleSwgaW5kZXgpIHsKICAgICAgaWYgKGtleSA9PT0gJycpIHJldHVybjtlbHNlIGlmIChrZXkuaW5kZXhPZignLCcpID09PSAtMSkgcmV0dXJuIGtleTtlbHNlIGlmIChrZXkuaW5kZXhPZignLCcpKSByZXR1cm4ga2V5LnNwbGl0KCcsJylbaW5kZXhdOwogICAgfSwKICAgIC8vIOyKpO2LuOy7tyBpbWcg6rCc7IiYIOyEuOuKlCDtlajsiJguCiAgICBwaG90b0luZGV4OiBmdW5jdGlvbiBwaG90b0luZGV4KHBob3RvVXJsKSB7CiAgICAgIGlmIChwaG90b1VybCA9PT0gJycpIHsKICAgICAgICByZXR1cm4gdGhpcy5pbWdJbmRleCA9IDA7CiAgICAgIH0gZWxzZSBpZiAocGhvdG9VcmwuaW5kZXhPZignfCcpID09PSAtMSkgewogICAgICAgIHJldHVybiB0aGlzLmltZ0luZGV4ID0gMTsKICAgICAgfSBlbHNlIGlmIChwaG90b1VybC5pbmRleE9mKCd8JykpIHsKICAgICAgICAvLyBodHRw7J2YIOqwnOyImOyXkCDrlLDrnbwgdi1mb3LsnbTsmqntlbQg7J2066+47KeAIO2DnOq3uCDsg53shLEuCiAgICAgICAgcmV0dXJuIHRoaXMuaW1nSW5kZXggPSBwaG90b1VybC5tYXRjaCgvaHR0cC9nKS5sZW5ndGg7CiAgICAgIH0KICAgIH0sCiAgICBzdGxsSW1nVVJMOiBmdW5jdGlvbiBzdGxsSW1nVVJMKHVybCwgaW5kZXgpIHsKICAgICAgaWYgKHVybCA9PT0gJycpIHsKICAgICAgICAvLyB1cmzsnbQg7JeG7J2EIOqyveyasAogICAgICAgIC8vIHBvc3RlciB1cmzso7zshozqsIAg7JeG7J2EIOqyveyasCDruYgg7J2066+47KeAIOy2lOy2nC4KICAgICAgICByZXR1cm4gJ2h0dHA6Ly9wbGFjZWhvbGQuaXQvMTQ0eDg2JzsKICAgICAgfSBlbHNlIGlmICh1cmwuaW5kZXhPZignfCcpID09PSAtMSkgewogICAgICAgIC8vIHVybOydtCAx6rCc7J28IOqyveyasAogICAgICAgIHJldHVybiB1cmw7CiAgICAgIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ3wnKSkgewogICAgICAgIC8vIHVybOydtCAy6rCcIOydtOyDgeydvCDqsr3smrAgIAogICAgICAgIHJldHVybiB1cmwuc3BsaXQoJ3wnKVtpbmRleF07IC8vIHNwbGl066W8IOydtOyaqe2VtCAnfCfrpbwg6riw7KSA7Jy866GcIHVybOydhCDrgpjriJQuIOq3uCDrkqTsl5Ag6rCBIGluZGV47JeQIOunnuuKlCDsgqzsp4R1cmzsnYQgcmV0dXJuLgogICAgICB9CiAgICB9LAogICAgLy8ga2V5d29yZCDtgbTrpq3tlZjrqbQg7ZW064u5IO2CpOybjOuTnOuzhCDsmIHtmZTrqqnroZ0g67O07J206rKMIO2VqC4KICAgIGJ0blNlYXJjaDogZnVuY3Rpb24gYnRuU2VhcmNoKGNoZWNrKSB7CiAgICAgIC8vIHJvdXRlcuydtOuPmSDso7zshowg67O064K07KSMLgogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL21vdmllJyk7CiAgICAgIHZhciBzZWFyY2hUeHQgPSB7CiAgICAgICAgc2VhcmNoVHh0OiB0aGlzLnNlYXJjaFRleHQsCiAgICAgICAgY2hlY2s6IGNoZWNrCiAgICAgIH07CiAgICAgIGNvbnNvbGUubG9nKHNlYXJjaFR4dCk7IC8vIOuwlOuhnCBzdGF0ZeyXkCDqsoHsg4nslrTrnpEg7LK07YGs67CV7Iqk7ZmV7J2444WH642w7J207YSwIOuEo+yWtOykmOu0hC4KCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnU1RBVEVfVVRMJywgc2VhcmNoVHh0KTsgLy8gaW5wdXTssL0g67mE7JuM7KSMLgoKICAgICAgdGhpcy5zZWFyY2hUZXh0ID0gJyc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["InformConts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"infromConts\" v-if=\"clickMovieData\">\n      <div class=\"topData clear\">\n        <img \n          class=\"poster\"                    \n          v-bind:src=\"posterURL(clickMovieData.posters)\" \n          v-bind:alt=\"textEdit(clickMovieData.title)\"\n        />\n        <div class=\"summaryBox\">\n          <div class=\"title\">\n            <h2>{{ textEdit(clickMovieData.title) }} ( {{ clickMovieData.prodYear }} )</h2>\n            <p class=\"engTitle\">{{ clickMovieData.titleEng }}</p>\n          </div><!--.title-->\n          <div class=\"otherData\">\n            <div class=\"other1\">\n              <span>{{ clickMovieData.genre }}</span>\n              <span>{{ clickMovieData.nation }}</span>\n            </div><!--.other1-->\n            <div class=\"other2\">\n              <span>{{ `${dateEdit(clickMovieData.repRlsDate)} 개봉` }}</span>\n              <span>{{ clickMovieData.runtime }}분</span>\n              <span>{{ clickMovieData.rating }}</span>\n            </div><!--.other2-->\n            <p v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">(감독) {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n\n            <a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">영화 상세정보</a>\n          </div><!--.otherData-->\n          <br/>\n          <!-- <p>영상url: {{ clickMovieData.vods.vod[0].vodUrl }}</p>\n          <video :src=\"clickMovieData.vods.vod[0].vodUrl\"></video> -->\n          <br/>\n          <!-- <p>감독: {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n          <ul class=\"textData\">\n              <li v-if=\"clickMovieData.genre !== ''\">장르: {{ clickMovieData.genre }}</li>\n              <li v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">감독: {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</li>\n              <li v-if=\"clickMovieData.actors.actor[0].actorNm !== ''\">배우: \n                <span \n                  v-for=\"actorName in clickMovieData.actors.actor\" \n                  v-bind:key=\"actorName.actorId\">\n                    {{ actorName.actorNm }}, \n                </span> \n              </li>\n          </ul> -->\n        </div><!--.summaryBox-->\n      </div><!--.topData-->\n\n      <div class=\"detailBox\">\n        <!-- 한문장의 슬로건(줄거리 중 첫 문장!)-->\n        <p \n          class=\"movieSlogan\"\n          v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n          {{ sloganEdit(clickMovieData.plots.plot[0].plotText) }}\n        </p>\n        <!-- 줄거리 -->\n          <p\n            class=\"movieStory\" \n            v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n            {{ storyEdit(clickMovieData.plots.plot[0].plotText) }}\n          </p>\n\n          <div class=\"movieKeyword\" v-if=\"clickMovieData.keywords\">\n            <form @click=\"btnSearch('keywordCK')\">\n              <button \n                v-for=\"(keyword, keywordIndex) in keywordNum(clickMovieData.keywords)\" :key=\"keywordIndex\"\n                @click=\"searchText = keyWord(clickMovieData.keywords, keywordIndex)\">\n                {{ `# ${keyWord(clickMovieData.keywords, keywordIndex)}` }}\n              </button>\n            </form>\n          </div>\n          \n          <div class=\"movieStlls\" v-if=\"clickMovieData.stlls\">\n            <p>{{ `${photoIndex(clickMovieData.stlls)}장의 스틸컷` }}</p>\n            <div  v-for=\"(photo, imgIndex) in photoIndex(clickMovieData.stlls)\" :key=\"imgIndex\" >\n              <img :src=\"stllImgURL(clickMovieData.stlls, imgIndex)\" alt=\"\" />\n              <!-- {{ imgIndex }} -->\n            </div>\n          </div>\n\n          <div class=\"movieActor clear\" v-if=\" clickMovieData.actors.actor[0].actorNm\">\n            <p>출연 / 스탭</p>\n            <div\n              v-for=\"(actorName, index) in clickMovieData.actors.actor\" \n              v-bind:key=\"index\"><!--key를 actorName.actorId로 주니까 데이터 자체에 같은 배우명단이 2개인 경우가 있어서 actorId가 중복된다는 error가 발생. 일단 에러 없애기 위해서 key를 임의의 index로 주었다.-->\n                  <span class=\"krNm\">{{ actorName.actorNm }} </span>\n                  <br/>\n                  <span class=\"enNm\">{{ actorName.actorEnNm }}</span> \n            </div>\n          </div>\n\n\n          <!-- <p><a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">상세정보</a></p> -->\n      </div><!--.detailBox-->\n      \n      <br/>\n      <!-- <div style=\"border:2px solid red;\">클릭한 id 영화 데이터: {{ clickMovieData }}</div> -->\n      \n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      imgIndex: 0,\n      keywordIndex: 0,\n      searchText: '',\n    }\n  },\n  computed: {\n    clickMovieData() {\n      return this.$store.state.clickMovie;\n    }\n  },\n  methods: {\n    textEdit(text) {\n      // 검색어를 나타내는 !HE, !HS글자 삭제.\n      return text.replace(/!HE|!HS/g, '');\n    },\n    posterURL(url) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/213x303';\n      }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.substring(0, url.indexOf('|')); \n      } \n    },\n    // 영화 개봉일자 편집.\n    dateEdit(date) {\n      return date.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1.$2.$3');\n      // \\d : 숫자 문자가 아닌 문자에 대응된다. [^0-9]와 동일하다.\n      // {n} : 앞 표현식이 n번 나타나는 부분에 대응된다. n은 반드시 양의 정수여야 한다.\n      // 즉, \\d{4}는 앞에서 4번째까지의 [0-9]까지 해당하는 숫자를 지칭하게 되는 것이다.\n    },\n    // 줄거리 중 제일 앞 문장만 추출.\n    sloganEdit(story) {\n      return story.substring(0, story.indexOf('!')+1);\n    },\n    // 줄거리 중 제일 앞 문장 제외한 나머지 모든 줄거리 추출.\n    storyEdit(story) {\n      return story.substring(story.indexOf('!')+1, story.length)\n    },\n    // keyword 개수 구함.\n    keywordNum(key) {\n      if(key === '') {\n        return this.keywordIndex = 0;\n      } else if(key.indexOf(',') === -1) {\n        return this.keywordIndex = 1;\n      } else if(key.indexOf(',')) {\n        return this.keywordIndex = key.match(/,/g).length + 1;\n      } \n    },\n    // keyword하나씩 넣어줌.\n    keyWord(key, index) {\n      if(key === '') return;\n      else if(key.indexOf(',') === -1) return key;\n      else if(key.indexOf(',')) return key.split(',')[index];\n    },\n    // 스틸컷 img 개수 세는 함수.\n    photoIndex(photoUrl) {\n      if(photoUrl === '') {\n        return this.imgIndex = 0;\n      } else if(photoUrl.indexOf('|') === -1) {     \n        return this.imgIndex = 1;\n      } else if(photoUrl.indexOf('|')) { // http의 개수에 따라 v-for이용해 이미지 태그 생성.\n        return this.imgIndex = photoUrl.match(/http/g).length;\n      }\n    },\n    stllImgURL(url, index) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/144x86';\n      } else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      } else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.split('|')[index];  // split를 이용해 '|'를 기준으로 url을 나눔. 그 뒤에 각 index에 맞는 사진url을 return.\n      } \n    },\n\n    // keyword 클릭하면 해당 키워드별 영화목록 보이게 함.\n    btnSearch(check) {\n      // router이동 주소 보내줌.\n      this.$router.push('/movie');\n\n      const searchTxt = {\n        searchTxt : this.searchText, \n        check : check,\n      };\n      console.log(searchTxt);\n            \n      // 바로 state에 겁색어랑 체크박스확인ㅇ데이터 넣어줘봄.\n      this.$store.commit('STATE_UTL', searchTxt);\n\n      // input창 비워줌.\n      this.searchText = '';\n    }\n  }\n}\n\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/components"}]}