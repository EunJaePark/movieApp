{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp_ej/src/components/InformConts.vue","mtime":1591761909863},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5tYXRjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgc2F2ZVZhbHVlLCBzYXZlVHlwZSwgZGVsZXRlQ29va2llIH0gZnJvbSAnLi4vdXRpbHMvY29va2llcyc7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW1nSW5kZXg6IDAsCiAgICAgIGtleXdvcmRJbmRleDogMCwKICAgICAgc2VhcmNoVGV4dDogJycKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgY2xpY2tNb3ZpZURhdGE6IGZ1bmN0aW9uIGNsaWNrTW92aWVEYXRhKCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUuY2xpY2tNb3ZpZTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHRleHRFZGl0OiBmdW5jdGlvbiB0ZXh0RWRpdCh0ZXh0KSB7CiAgICAgIC8vIOqygOyDieyWtOulvCDrgpjtg4DrgrTripQgIUhFLCAhSFPquIDsnpAg7IKt7KCcLgogICAgICByZXR1cm4gdGV4dC5yZXBsYWNlKC8hSEV8IUhTL2csICcnKTsKICAgIH0sCiAgICBwb3N0ZXJVUkw6IGZ1bmN0aW9uIHBvc3RlclVSTCh1cmwpIHsKICAgICAgaWYgKHVybCA9PT0gJycpIHsKICAgICAgICAvLyB1cmzsnbQg7JeG7J2EIOqyveyasAogICAgICAgIC8vIHBvc3RlciB1cmzso7zshozqsIAg7JeG7J2EIOqyveyasCDruYgg7J2066+47KeAIOy2lOy2nC4KICAgICAgICByZXR1cm4gJ2h0dHA6Ly9wbGFjZWhvbGQuaXQvMjEzeDMwMyc7CiAgICAgIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ3wnKSA9PT0gLTEpIHsKICAgICAgICAvLyB1cmzsnbQgMeqwnOydvCDqsr3smrAKICAgICAgICByZXR1cm4gdXJsOwogICAgICB9IGVsc2UgaWYgKHVybC5pbmRleE9mKCd8JykpIHsKICAgICAgICAvLyB1cmzsnbQgMuqwnCDsnbTsg4Hsnbwg6rK97JqwICAKICAgICAgICByZXR1cm4gdXJsLnN1YnN0cmluZygwLCB1cmwuaW5kZXhPZignfCcpKTsKICAgICAgfQogICAgfSwKICAgIC8vIOyYge2ZlCDqsJzrtInsnbzsnpAg7Y647KeRLgogICAgZGF0ZUVkaXQ6IGZ1bmN0aW9uIGRhdGVFZGl0KGRhdGUpIHsKICAgICAgcmV0dXJuIGRhdGUucmVwbGFjZSgvKFxkezR9KShcZHsyfSkoXGR7Mn0pLywgJyQxLiQyLiQzJyk7IC8vIFxkIDog7Iir7J6QIOusuOyekOqwgCDslYTri4wg66y47J6Q7JeQIOuMgOydkeuQnOuLpC4gW14wLTld7JmAIOuPmeydvO2VmOuLpC4KICAgICAgLy8ge259IDog7JWeIO2RnO2YhOyLneydtCBu67KIIOuCmO2DgOuCmOuKlCDrtoDrtoTsl5Ag64yA7J2R65Cc64ukLiBu7J2AIOuwmOuTnOyLnCDslpHsnZgg7KCV7IiY7Jes7JW8IO2VnOuLpC4KICAgICAgLy8g7KaJLCBcZHs0feuKlCDslZ7sl5DshJwgNOuyiOynuOq5jOyngOydmCBbMC05Xeq5jOyngCDtlbTri7ntlZjripQg7Iir7J6Q66W8IOyngOy5re2VmOqyjCDrkJjripQg6rKD7J2064ukLgogICAgfSwKICAgIC8vIOykhOqxsOumrCDspJEg7KCc7J28IOyVniDrrLjsnqXrp4wg7LaU7LacLgogICAgc2xvZ2FuRWRpdDogZnVuY3Rpb24gc2xvZ2FuRWRpdChzdG9yeSkgewogICAgICByZXR1cm4gc3Rvcnkuc3Vic3RyaW5nKDAsIHN0b3J5LmluZGV4T2YoJyEnKSArIDEpOwogICAgfSwKICAgIC8vIOykhOqxsOumrCDspJEg7KCc7J28IOyVniDrrLjsnqUg7KCc7Jm47ZWcIOuCmOuouOyngCDrqqjrk6Ag7KSE6rGw66asIOy2lOy2nC4KICAgIHN0b3J5RWRpdDogZnVuY3Rpb24gc3RvcnlFZGl0KHN0b3J5KSB7CiAgICAgIHJldHVybiBzdG9yeS5zdWJzdHJpbmcoc3RvcnkuaW5kZXhPZignIScpICsgMSwgc3RvcnkubGVuZ3RoKTsKICAgIH0sCiAgICAvLyBrZXl3b3JkIOqwnOyImCDqtaztlaguCiAgICBrZXl3b3JkTnVtOiBmdW5jdGlvbiBrZXl3b3JkTnVtKGtleSkgewogICAgICBpZiAoa2V5ID09PSAnJykgewogICAgICAgIHJldHVybiB0aGlzLmtleXdvcmRJbmRleCA9IDA7CiAgICAgIH0gZWxzZSBpZiAoa2V5LmluZGV4T2YoJywnKSA9PT0gLTEpIHsKICAgICAgICByZXR1cm4gdGhpcy5rZXl3b3JkSW5kZXggPSAxOwogICAgICB9IGVsc2UgaWYgKGtleS5pbmRleE9mKCcsJykpIHsKICAgICAgICByZXR1cm4gdGhpcy5rZXl3b3JkSW5kZXggPSBrZXkubWF0Y2goLywvZykubGVuZ3RoICsgMTsKICAgICAgfQogICAgfSwKICAgIC8vIGtleXdvcmTtlZjrgpjslKkg64Sj7Ja07KSMLgogICAga2V5V29yZDogZnVuY3Rpb24ga2V5V29yZChrZXksIGluZGV4KSB7CiAgICAgIGlmIChrZXkgPT09ICcnKSByZXR1cm47ZWxzZSBpZiAoa2V5LmluZGV4T2YoJywnKSA9PT0gLTEpIHJldHVybiBrZXk7ZWxzZSBpZiAoa2V5LmluZGV4T2YoJywnKSkgcmV0dXJuIGtleS5zcGxpdCgnLCcpW2luZGV4XTsKICAgIH0sCiAgICAvLyDsiqTti7jsu7cgaW1nIOqwnOyImCDshLjripQg7ZWo7IiYLgogICAgcGhvdG9JbmRleDogZnVuY3Rpb24gcGhvdG9JbmRleChwaG90b1VybCkgewogICAgICBpZiAocGhvdG9VcmwgPT09ICcnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuaW1nSW5kZXggPSAwOwogICAgICB9IGVsc2UgaWYgKHBob3RvVXJsLmluZGV4T2YoJ3wnKSA9PT0gLTEpIHsKICAgICAgICByZXR1cm4gdGhpcy5pbWdJbmRleCA9IDE7CiAgICAgIH0gZWxzZSBpZiAocGhvdG9VcmwuaW5kZXhPZignfCcpKSB7CiAgICAgICAgLy8gaHR0cOydmCDqsJzsiJjsl5Ag65Sw6528IHYtZm9y7J207Jqp7ZW0IOydtOuvuOyngCDtg5zqt7gg7IOd7ISxLgogICAgICAgIHJldHVybiB0aGlzLmltZ0luZGV4ID0gcGhvdG9VcmwubWF0Y2goL2h0dHAvZykubGVuZ3RoOwogICAgICB9CiAgICB9LAogICAgc3RsbEltZ1VSTDogZnVuY3Rpb24gc3RsbEltZ1VSTCh1cmwsIGluZGV4KSB7CiAgICAgIGlmICh1cmwgPT09ICcnKSB7CiAgICAgICAgLy8gdXJs7J20IOyXhuydhCDqsr3smrAKICAgICAgICAvLyBwb3N0ZXIgdXJs7KO87IaM6rCAIOyXhuydhCDqsr3smrAg67mIIOydtOuvuOyngCDstpTstpwuCiAgICAgICAgcmV0dXJuICdodHRwOi8vcGxhY2Vob2xkLml0LzE0NHg4Nic7CiAgICAgIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ3wnKSA9PT0gLTEpIHsKICAgICAgICAvLyB1cmzsnbQgMeqwnOydvCDqsr3smrAKICAgICAgICByZXR1cm4gdXJsOwogICAgICB9IGVsc2UgaWYgKHVybC5pbmRleE9mKCd8JykpIHsKICAgICAgICAvLyB1cmzsnbQgMuqwnCDsnbTsg4Hsnbwg6rK97JqwICAKICAgICAgICByZXR1cm4gdXJsLnNwbGl0KCd8JylbaW5kZXhdOyAvLyBzcGxpdOulvCDsnbTsmqntlbQgJ3wn66W8IOq4sOykgOycvOuhnCB1cmzsnYQg64KY64iULiDqt7gg65Kk7JeQIOqwgSBpbmRleOyXkCDrp57ripQg7IKs7KeEdXJs7J2EIHJldHVybi4KICAgICAgfQogICAgfSwKICAgIC8vIOuwsOyasCDsnbTrpoTsl5AgIUhFLCAhSFMg7KCc6rGw7ZW07KSMLgogICAgYWN0b3JFZGl0OiBmdW5jdGlvbiBhY3RvckVkaXQobmFtZSkgewogICAgICBpZiAobmFtZS5tYXRjaCgvIUhFIHwgIUhTL2dpKSkgcmV0dXJuIG5hbWUucmVwbGFjZSgvIUhFIHwgIUhTL2csICcnKTtlbHNlIHJldHVybiBuYW1lOwogICAgfSwKICAgIC8vIGtleXdvcmQg7YG066at7ZWY66m0IO2VtOuLuSDtgqTsm4zrk5zrs4Qg7JiB7ZmU66qp66GdIOuztOydtOqyjCDtlaguCiAgICBidG5TZWFyY2g6IGZ1bmN0aW9uIGJ0blNlYXJjaChjaGVjaykgewogICAgICAvLyByb3V0ZXLsnbTrj5kg7KO87IaMIOuztOuCtOykjC4KICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9tb3ZpZScpOyAvLyDsmIHtmZTqsoDsg4nsnITtlbQg7J6F66Cl7ZWcIOqygOyDieyWtCArIOqygOyDie2DgOyehSBjb29raWXsl5Ag7KCA7J6l7ZW07KSMLgoKICAgICAgc2F2ZVZhbHVlKCIiLmNvbmNhdCh0aGlzLmNoZWNrLCAiPSIpLmNvbmNhdCh0aGlzLnNlYXJjaFRleHQpKTsKICAgICAgc2F2ZVR5cGUodGhpcy5jaGVjayk7CiAgICAgIHZhciBzZWFyY2hUeHQgPSB7CiAgICAgICAgc2VhcmNoVHh0OiAia2V5d29yZD0iLmNvbmNhdCh0aGlzLnNlYXJjaFRleHQpLAogICAgICAgIGNoZWNrOiBjaGVjawogICAgICB9OwogICAgICBjb25zb2xlLmxvZyhzZWFyY2hUeHQpOyAvLyDrsJTroZwgc3RhdGXsl5Ag6rKB7IOJ7Ja0656RIOyytO2BrOuwleyKpO2ZleyduOOFh+uNsOydtO2EsCDrhKPslrTspJjrtIQuCgogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ1NUQVRFX1VUTCcsIHNlYXJjaFR4dCk7IC8vIGlucHV07LC9IOu5hOybjOykjC4KCiAgICAgIHRoaXMuc2VhcmNoVGV4dCA9ICcnOwogICAgfQogIH0KfTs="},{"version":3,"sources":["InformConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA,SAAA,SAAA,EAAA,QAAA,EAAA,YAAA,QAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,YAAA,EAAA,CAFA;AAGA,MAAA,UAAA,EAAA;AAHA,KAAA;AAKA,GAPA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA;AACA;AAHA,GARA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AACA,KAJA;AAKA,IAAA,SALA,qBAKA,GALA,EAKA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA;AAAA;AACA;AACA,eAAA,6BAAA;AACA,OAHA,MAGA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA,KAdA;AAeA;AACA,IAAA,QAhBA,oBAgBA,IAhBA,EAgBA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,uBAAA,EAAA,UAAA,CAAA,CADA,CAEA;AACA;AACA;AACA,KArBA;AAsBA;AACA,IAAA,UAvBA,sBAuBA,KAvBA,EAuBA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AACA,KAzBA;AA0BA;AACA,IAAA,SA3BA,qBA2BA,KA3BA,EA2BA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,EAAA,KAAA,CAAA,MAAA,CAAA;AACA,KA7BA;AA8BA;AACA,IAAA,UA/BA,sBA+BA,GA/BA,EA+BA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA;AACA,eAAA,KAAA,YAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AACA,eAAA,KAAA,YAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AACA,eAAA,KAAA,YAAA,GAAA,GAAA,CAAA,KAAA,CAAA,IAAA,EAAA,MAAA,GAAA,CAAA;AACA;AACA,KAvCA;AAwCA;AACA,IAAA,OAzCA,mBAyCA,GAzCA,EAyCA,KAzCA,EAyCA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA,OAAA,KACA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA,OAAA,GAAA,CAAA,KACA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA,OAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,KAAA,CAAA;AACA,KA7CA;AA8CA;AACA,IAAA,UA/CA,sBA+CA,QA/CA,EA+CA;AACA,UAAA,QAAA,KAAA,EAAA,EAAA;AACA,eAAA,KAAA,QAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,QAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AACA,eAAA,KAAA,QAAA,GAAA,CAAA;AACA,OAFA,MAEA,IAAA,QAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAAA;AACA,eAAA,KAAA,QAAA,GAAA,QAAA,CAAA,KAAA,CAAA,OAAA,EAAA,MAAA;AACA;AACA,KAvDA;AAwDA,IAAA,UAxDA,sBAwDA,GAxDA,EAwDA,KAxDA,EAwDA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA;AAAA;AACA;AACA,eAAA,4BAAA;AACA,OAHA,MAGA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA,CAAA,KAAA,CAAA,GAAA,EAAA,KAAA,CAAA,CADA,CACA;AACA;AACA,KAjEA;AAkEA;AACA,IAAA,SAnEA,qBAmEA,IAnEA,EAmEA;AACA,UAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA,OAAA,IAAA,CAAA,OAAA,CAAA,YAAA,EAAA,EAAA,CAAA,CAAA,KACA,OAAA,IAAA;AACA,KAtEA;AAwEA;AACA,IAAA,SAzEA,qBAyEA,KAzEA,EAyEA;AACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,QAAA,EAFA,CAIA;;AACA,MAAA,SAAA,WAAA,KAAA,KAAA,cAAA,KAAA,UAAA,EAAA;AACA,MAAA,QAAA,CAAA,KAAA,KAAA,CAAA;AAEA,UAAA,SAAA,GAAA;AACA,QAAA,SAAA,oBAAA,KAAA,UAAA,CADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA;AAIA,MAAA,OAAA,CAAA,GAAA,CAAA,SAAA,EAZA,CAcA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,SAAA,EAfA,CAiBA;;AACA,WAAA,UAAA,GAAA,EAAA;AACA;AA5FA;AAdA,CAAA","sourcesContent":["<template>\n  <div class=\"infromConts\" v-if=\"clickMovieData\">\n      <div class=\"topData clear\">\n        <img \n          class=\"poster\"                    \n          v-bind:src=\"posterURL(clickMovieData.posters)\" \n          v-bind:alt=\"textEdit(clickMovieData.title)\"\n        />\n        <div class=\"summaryBox\">\n          <div class=\"title\">\n            <h2>{{ textEdit(clickMovieData.title) }} ( {{ clickMovieData.prodYear }} )</h2>\n            <p class=\"engTitle\">{{ clickMovieData.titleEng }}</p>\n          </div><!--.title-->\n          <div class=\"textBox\">\n            <div class=\"textList\">\n              <span>{{ clickMovieData.genre }}</span>\n              <span>{{ clickMovieData.nation }}</span>\n            </div><!--.textInform-->\n            <div class=\"textList\">\n              <span>{{ `${dateEdit(clickMovieData.repRlsDate)} 개봉` }}</span>\n              <span>{{ clickMovieData.runtime }}분</span>\n              <span>{{ clickMovieData.rating }}</span>\n            </div><!--.textInform-->\n            <p v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">(감독) {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n\n            <a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">영화 상세정보</a>\n          </div><!--.textBox-->\n          <br/>\n          <!-- <p>영상url: {{ clickMovieData.vods.vod[0].vodUrl }}</p>\n          <video :src=\"clickMovieData.vods.vod[0].vodUrl\"></video> -->\n          <br/>\n        </div><!--.summaryBox-->\n      </div><!--.topData-->\n\n      <div class=\"detailBox\">\n        <!-- 한문장의 슬로건(줄거리 중 첫 문장!)-->\n        <p \n          class=\"movieSlogan\"\n          v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n          {{ sloganEdit(clickMovieData.plots.plot[0].plotText) }}\n        </p>\n        <!-- 줄거리 -->\n          <p\n            class=\"movieStory\" \n            v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n            {{ storyEdit(clickMovieData.plots.plot[0].plotText) }}\n          </p>\n\n          <div class=\"movieKeyword\" v-if=\"clickMovieData.keywords\">\n            <form @click=\"btnSearch('keywordCK')\">\n              <button \n                v-for=\"(keyword, keywordIndex) in keywordNum(clickMovieData.keywords)\" :key=\"keywordIndex\"\n                @click=\"searchText = keyWord(clickMovieData.keywords, keywordIndex)\">\n                {{ `# ${keyWord(clickMovieData.keywords, keywordIndex)}` }}\n              </button>\n            </form>\n          </div>\n          \n          <div class=\"movieStlls\" v-if=\"clickMovieData.stlls\">\n            <p>{{ `${photoIndex(clickMovieData.stlls)}장의 스틸컷` }}</p>\n            <div  v-for=\"(photo, imgIndex) in photoIndex(clickMovieData.stlls)\" :key=\"imgIndex\" >\n              <img :src=\"stllImgURL(clickMovieData.stlls, imgIndex)\" alt=\"\" />\n              <!-- {{ imgIndex }} -->\n            </div>\n          </div>\n\n          <div class=\"movieActor clear\" v-if=\" clickMovieData.actors.actor[0].actorNm\">\n            <p>출연 / 스탭</p>\n            <div\n              v-for=\"(actorName, index) in clickMovieData.actors.actor\" \n              v-bind:key=\"index\"><!--key를 actorName.actorId로 주니까 데이터 자체에 같은 배우명단이 2개인 경우가 있어서 actorId가 중복된다는 error가 발생. 일단 에러 없애기 위해서 key를 임의의 index로 주었다.-->\n                  <span class=\"krNm\">{{ actorEdit(actorName.actorNm) }} </span>\n                  <br/>\n                  <span class=\"enNm\">{{ actorEdit(actorName.actorEnNm) }}</span> \n            </div>\n          </div>\n\n\n          <!-- <p><a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">상세정보</a></p> -->\n      </div><!--.detailBox-->\n      \n      <br/>\n      <!-- <div style=\"border:2px solid red;\">클릭한 id 영화 데이터: {{ clickMovieData }}</div> -->\n      \n  </div>\n</template>\n\n<script>\nimport { saveValue, saveType, deleteCookie } from '../utils/cookies';\n\nexport default {\n  data() {\n    return {\n      imgIndex: 0,\n      keywordIndex: 0,\n      searchText: '',\n    }\n  },\n  computed: {\n    clickMovieData() {\n      return this.$store.state.clickMovie;\n    }\n  },\n  \n  methods: {\n    textEdit(text) {\n      // 검색어를 나타내는 !HE, !HS글자 삭제.\n      return text.replace(/!HE|!HS/g, '');\n    },\n    posterURL(url) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/213x303';\n      }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.substring(0, url.indexOf('|')); \n      } \n    },\n    // 영화 개봉일자 편집.\n    dateEdit(date) {\n      return date.replace(/(\\d{4})(\\d{2})(\\d{2})/, '$1.$2.$3');\n      // \\d : 숫자 문자가 아닌 문자에 대응된다. [^0-9]와 동일하다.\n      // {n} : 앞 표현식이 n번 나타나는 부분에 대응된다. n은 반드시 양의 정수여야 한다.\n      // 즉, \\d{4}는 앞에서 4번째까지의 [0-9]까지 해당하는 숫자를 지칭하게 되는 것이다.\n    },\n    // 줄거리 중 제일 앞 문장만 추출.\n    sloganEdit(story) {\n      return story.substring(0, story.indexOf('!')+1);\n    },\n    // 줄거리 중 제일 앞 문장 제외한 나머지 모든 줄거리 추출.\n    storyEdit(story) {\n      return story.substring(story.indexOf('!')+1, story.length)\n    },\n    // keyword 개수 구함.\n    keywordNum(key) {\n      if(key === '') {\n        return this.keywordIndex = 0;\n      } else if(key.indexOf(',') === -1) {\n        return this.keywordIndex = 1;\n      } else if(key.indexOf(',')) {\n        return this.keywordIndex = key.match(/,/g).length + 1;\n      } \n    },\n    // keyword하나씩 넣어줌.\n    keyWord(key, index) {\n      if(key === '') return;\n      else if(key.indexOf(',') === -1) return key;\n      else if(key.indexOf(',')) return key.split(',')[index];\n    },\n    // 스틸컷 img 개수 세는 함수.\n    photoIndex(photoUrl) {\n      if(photoUrl === '') {\n        return this.imgIndex = 0;\n      } else if(photoUrl.indexOf('|') === -1) {     \n        return this.imgIndex = 1;\n      } else if(photoUrl.indexOf('|')) { // http의 개수에 따라 v-for이용해 이미지 태그 생성.\n        return this.imgIndex = photoUrl.match(/http/g).length;\n      }\n    },\n    stllImgURL(url, index) {            \n      if(url === '') {   // url이 없을 경우\n        // poster url주소가 없을 경우 빈 이미지 추출.\n        return 'http://placehold.it/144x86';\n      } else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n        return url;\n      } else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n        return url.split('|')[index];  // split를 이용해 '|'를 기준으로 url을 나눔. 그 뒤에 각 index에 맞는 사진url을 return.\n      } \n    },\n    // 배우 이름에 !HE, !HS 제거해줌.\n    actorEdit(name) {\n      if(name.match(/!HE | !HS/gi)) return name.replace(/!HE | !HS/g, '');\n      else return name;\n    },\n\n    // keyword 클릭하면 해당 키워드별 영화목록 보이게 함.\n    btnSearch(check) {\n      // router이동 주소 보내줌.\n      this.$router.push('/movie');\n\n      // 영화검색위해 입력한 검색어 + 검색타입 cookie에 저장해줌.\n      saveValue(`${this.check}=${this.searchText}`);\n      saveType(this.check); \n\n      const searchTxt = {\n        searchTxt : `keyword=${this.searchText}`, \n        check : check,\n      };\n      console.log(searchTxt);\n            \n      // 바로 state에 겁색어랑 체크박스확인ㅇ데이터 넣어줘봄.\n      this.$store.commit('STATE_UTL', searchTxt);\n\n      // input창 비워줌.\n      this.searchText = '';\n    }\n  }\n}\n\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/components"}]}