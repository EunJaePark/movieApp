{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/movieApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp/src/components/InformConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp/src/components/InformConts.vue","mtime":1590742683904},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICBjbGlja01vdmllRGF0YTogZnVuY3Rpb24gY2xpY2tNb3ZpZURhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jbGlja01vdmllOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdGV4dEVkaXQ6IGZ1bmN0aW9uIHRleHRFZGl0KHRleHQpIHsKICAgICAgLy8g6rKA7IOJ7Ja066W8IOuCmO2DgOuCtOuKlCAhSEUsICFIU+q4gOyekCDsgq3soJwuCiAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoLyFIRXwhSFMvZywgJycpOwogICAgfSwKICAgIGVkaXRVUkw6IGZ1bmN0aW9uIGVkaXRVUkwodXJsKSB7CiAgICAgIGlmICh1cmwgPT09ICcnKSB7CiAgICAgICAgLy8gdXJs7J20IOyXhuydhCDqsr3smrAKICAgICAgICAvLyBwb3N0ZXIgdXJs7KO87IaM6rCAIOyXhuydhCDqsr3smrAg67mIIOydtOuvuOyngCDstpTstpwuCiAgICAgICAgcmV0dXJuICdodHRwOi8vcGxhY2Vob2xkLml0LzIxM3gzMDMnOwogICAgICB9IGVsc2UgaWYgKHVybC5pbmRleE9mKCd8JykgPT09IC0xKSB7CiAgICAgICAgLy8gdXJs7J20IDHqsJzsnbwg6rK97JqwCiAgICAgICAgcmV0dXJuIHVybDsKICAgICAgfSBlbHNlIGlmICh1cmwuaW5kZXhPZignfCcpKSB7CiAgICAgICAgLy8gdXJs7J20IDLqsJwg7J207IOB7J28IOqyveyasCAgCiAgICAgICAgLy8gcG9zdGVyIHVybOydtCDrkZDqsJwg7J207IOB7J28IOqyveyasCBqcGfsnZgg66eI7KeA66eJIOq4gOyekOyduCBn7J2YIGluZGV47Iic67KI66eM7YG8IOyjvOyGjCDstpTstpwuCiAgICAgICAgLy8gIHwgPC0g7J20IOq4sO2YuOulvCDquLDspIDsnLzroZwg7ZaI642U64uIIHVybCDso7zshozqsIAg7ZWY64KY7J28IOqyveyasCDso7zshozqsIAg7JWE7JiIIOyCrOudvOyguCDrsoTroKTshJwganBn6riA7J6Q66GcIO2MkOuLqO2VtOyjvOuKlCDqsoPsnLzroZwg7IiY7KCVLgogICAgICAgIC8vIHJldHVybiB1cmwuc3Vic3RyaW5nKDAsIHVybC5pbmRleE9mKHVybC5tYXRjaCgvZy9pKSkgKyAxKTsgCiAgICAgICAgLy8gJ3wn66GcIOq4sOykgOydhCDrsJTqv5TspIwuIOuMgOyLoCDquLDsobTqs7wg64us66asIDPqsIDsp4DsnZgg6rK97Jqw66GcIOu2hOulmO2VqC4gCiAgICAgICAgcmV0dXJuIHVybC5zdWJzdHJpbmcoMCwgdXJsLmluZGV4T2YoJ3wnKSk7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["InformConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA;AACA;AAHA,GADA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AACA,KAJA;AAKA,IAAA,OALA,mBAKA,GALA,EAKA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA;AAAA;AACA;AACA,eAAA,6BAAA;AACA,OAHA,MAGA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAAA;AACA;AACA;AACA;AACA;AACA,eAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA;AAlBA;AANA,CAAA","sourcesContent":["<template>\n  <div v-if=\"clickMovieData\">\n      InformConts\n      <!-- <div \n        class=\"movieBox\"\n        v-for=\"movie in movieResult \" v-bind:key=\"movie.DOCID\">\n          <p>제목: {{ textEdit(movie.title) }} ( {{ movie.prodYear }} )</p>\n          <p>감독: {{ textEdit(movie.directors.director[0].directorNm) }}</p>\n          <ul class=\"textData\">\n            <li v-if=\"movie.genre !== ''\">장르: {{ movie.genre }}</li>\n            <li v-if=\"movie.directors.director[0].directorNm !== ''\">감독: {{ textEdit(movie.directors.director[0].directorNm) }}</li>\n            <li v-if=\"movie.actors.actor[0].actorNm !== ''\">배우: \n              <span \n                v-for=\"actorName in movie.actors.actor\" \n                v-bind:key=\"actorName.actorId\">\n                  {{ actorName.actorNm }}, \n              </span> \n            </li>\n            <li v-if=\"movie.plots.plot[0].plotText !== ''\">줄거리: {{ movie.plots.plot[0].plotText }}</li>\n            <li><a v-bind:href=\"movie.kmdbUrl\" target=\"blanket\">상세정보</a></li>\n          </ul>\n      </div>  -->\n      <h2>제목: {{ textEdit(clickMovieData.title) }} ( {{ clickMovieData.prodYear }} )</h2>\n      <br/>\n      <p>영상url: {{ clickMovieData.vods.vod[0].vodUrl }}</p>\n      <video :src=\"clickMovieData.vods.vod[0].vodUrl\"></video>\n      <br/>\n      <p>감독: {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n      <ul class=\"textData\">\n          <li v-if=\"clickMovieData.genre !== ''\">장르: {{ clickMovieData.genre }}</li>\n          <li v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">감독: {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</li>\n          <li v-if=\"clickMovieData.actors.actor[0].actorNm !== ''\">배우: \n            <span \n              v-for=\"actorName in clickMovieData.actors.actor\" \n              v-bind:key=\"actorName.actorId\">\n                {{ actorName.actorNm }}, \n            </span> \n          </li>\n          <li v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">줄거리: {{ clickMovieData.plots.plot[0].plotText }}</li>\n          <li><a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">상세정보</a></li>\n      </ul>\n      <div class=\"stills\">\n        <P>스틸컷url: {{ clickMovieData.stlls }}</P>\n        <img :src=\"editURL(clickMovieData.stlls)\" />\n      </div>\n      <br/>\n      <!-- <div style=\"border:2px solid red;\">클릭한 id 영화 데이터: {{ clickMovieData }}</div> -->\n      \n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    clickMovieData() {\n      return this.$store.state.clickMovie;\n    }\n  },\n  methods: {\n    textEdit(text) {\n      // 검색어를 나타내는 !HE, !HS글자 삭제.\n      return text.replace(/!HE|!HS/g, '');\n    },\n    editURL(url) {            \n        if(url === '') {   // url이 없을 경우\n            // poster url주소가 없을 경우 빈 이미지 추출.\n            return 'http://placehold.it/213x303';\n        }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n            return url;\n        }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n            // poster url이 두개 이상일 경우 jpg의 마지막 글자인 g의 index순번만큼 주소 추출.\n            //  | <- 이 기호를 기준으로 했더니 url 주소가 하나일 경우 주소가 아예 사라져 버려서 jpg글자로 판단해주는 것으로 수정.\n            // return url.substring(0, url.indexOf(url.match(/g/i)) + 1); \n            // '|'로 기준을 바꿔줌. 대신 기존과 달리 3가지의 경우로 분류함. \n            return url.substring(0, url.indexOf('|')); \n        } \n    },\n  }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/components"}]}