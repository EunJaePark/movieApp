{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/movieApp/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp/src/components/InformConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp/src/components/InformConts.vue","mtime":1590765715632},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eunjae/Desktop/github/movieApp/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICBjbGlja01vdmllRGF0YTogZnVuY3Rpb24gY2xpY2tNb3ZpZURhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jbGlja01vdmllOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdGV4dEVkaXQ6IGZ1bmN0aW9uIHRleHRFZGl0KHRleHQpIHsKICAgICAgLy8g6rKA7IOJ7Ja066W8IOuCmO2DgOuCtOuKlCAhSEUsICFIU+q4gOyekCDsgq3soJwuCiAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoLyFIRXwhSFMvZywgJycpOwogICAgfSwKICAgIGVkaXRVUkw6IGZ1bmN0aW9uIGVkaXRVUkwodXJsKSB7CiAgICAgIGlmICh1cmwgPT09ICcnKSB7CiAgICAgICAgLy8gdXJs7J20IOyXhuydhCDqsr3smrAKICAgICAgICAvLyBwb3N0ZXIgdXJs7KO87IaM6rCAIOyXhuydhCDqsr3smrAg67mIIOydtOuvuOyngCDstpTstpwuCiAgICAgICAgcmV0dXJuICdodHRwOi8vcGxhY2Vob2xkLml0LzE0NHg4Nic7CiAgICAgIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ3wnKSA9PT0gLTEpIHsKICAgICAgICAvLyB1cmzsnbQgMeqwnOydvCDqsr3smrAKICAgICAgICByZXR1cm4gdXJsOwogICAgICB9IGVsc2UgaWYgKHVybC5pbmRleE9mKCd8JykpIHsKICAgICAgICAvLyB1cmzsnbQgMuqwnCDsnbTsg4Hsnbwg6rK97JqwICAKICAgICAgICByZXR1cm4gdXJsLnN1YnN0cmluZygwLCB1cmwuaW5kZXhPZignfCcpKTsKICAgICAgfQogICAgfSwKICAgIC8vIOykhOqxsOumrCDspJEg7KCc7J28IOyVniDrrLjsnqXrp4wg7LaU7LacLgogICAgc2xvZ2FuRWRpdDogZnVuY3Rpb24gc2xvZ2FuRWRpdChzdG9yeSkgewogICAgICByZXR1cm4gc3Rvcnkuc3Vic3RyaW5nKDAsIHN0b3J5LmluZGV4T2YoJyEnKSArIDEpOwogICAgfSwKICAgIC8vIOykhOqxsOumrCDspJEg7KCc7J28IOyVniDrrLjsnqUg7KCc7Jm47ZWcIOuCmOuouOyngCDrqqjrk6Ag7KSE6rGw66asIOy2lOy2nC4KICAgIHN0b3J5RWRpdDogZnVuY3Rpb24gc3RvcnlFZGl0KHN0b3J5KSB7CiAgICAgIHJldHVybiBzdG9yeS5zdWJzdHJpbmcoc3RvcnkuaW5kZXhPZignIScpICsgMSwgc3RvcnkubGVuZ3RoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["InformConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA;AACA;AAHA,GADA;AAMA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,oBACA,IADA,EACA;AACA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AACA,KAJA;AAKA,IAAA,OALA,mBAKA,GALA,EAKA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA;AAAA;AACA;AACA,eAAA,4BAAA;AACA,OAHA,MAGA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA,KAdA;AAeA;AACA,IAAA,UAhBA,sBAgBA,KAhBA,EAgBA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,CAAA;AACA,KAlBA;AAmBA;AACA,IAAA,SApBA,qBAoBA,KApBA,EAoBA;AACA,aAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,EAAA,KAAA,CAAA,MAAA,CAAA;AACA;AAtBA;AANA,CAAA","sourcesContent":["<template>\n  <div class=\"infromConts\" v-if=\"clickMovieData\">\n      <div class=\"topData clear\">\n        <img \n          class=\"poster\"                    \n          v-bind:src=\"editURL(clickMovieData.posters)\" \n          v-bind:alt=\"textEdit(clickMovieData.title)\"\n        />\n        <div class=\"summaryBox\">\n          <div class=\"title\">\n            <h2>{{ textEdit(clickMovieData.title) }} ( {{ clickMovieData.prodYear }} )</h2>\n            <p class=\"engTitle\">{{ clickMovieData.titleEng }}</p>\n          </div><!--.title-->\n          <div class=\"otherData\">\n            <div class=\"other1\">\n              <span>{{ clickMovieData.genre }}</span>\n              <span>{{ clickMovieData.nation }}</span>\n            </div><!--.other1-->\n            <div class=\"other2\">\n              <span>{{ clickMovieData.repRlsDate }}</span>\n              <span>{{ clickMovieData.runtime }}분</span>\n              <span>{{ clickMovieData.rating }}</span>\n            </div><!--.other2-->\n            <p v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">(감독) {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n          </div><!--.otherData-->\n          <br/>\n          <!-- <p>영상url: {{ clickMovieData.vods.vod[0].vodUrl }}</p>\n          <video :src=\"clickMovieData.vods.vod[0].vodUrl\"></video> -->\n          <br/>\n          <!-- <p>감독: {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</p>\n          <ul class=\"textData\">\n              <li v-if=\"clickMovieData.genre !== ''\">장르: {{ clickMovieData.genre }}</li>\n              <li v-if=\"clickMovieData.directors.director[0].directorNm !== ''\">감독: {{ textEdit(clickMovieData.directors.director[0].directorNm) }}</li>\n              <li v-if=\"clickMovieData.actors.actor[0].actorNm !== ''\">배우: \n                <span \n                  v-for=\"actorName in clickMovieData.actors.actor\" \n                  v-bind:key=\"actorName.actorId\">\n                    {{ actorName.actorNm }}, \n                </span> \n              </li>\n          </ul> -->\n        </div><!--.summaryBox-->\n      </div><!--.topData-->\n\n      <div class=\"detailBox\">\n        <!-- 한문장의 슬로건(줄거리 중 첫 문장!)-->\n        <p \n          class=\"movieSlogan\"\n          v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n          {{ sloganEdit(clickMovieData.plots.plot[0].plotText) }}\n        </p>\n        <!-- 줄거리 -->\n          <p\n            class=\"movieStory\" \n            v-if=\"clickMovieData.plots.plot[0].plotText !== ''\">\n            {{ storyEdit(clickMovieData.plots.plot[0].plotText) }}\n          </p>\n          \n          <div class=\"stills\">\n            <P style=\"width:100%; overflow:scroll;\">스틸컷url: {{ clickMovieData.stlls }}</P>\n            <img :src=\"editURL(clickMovieData.stlls)\" />\n          </div>\n\n          <p v-if=\"clickMovieData.actors.actor[0].actorNm !== ''\">배우: \n              <span \n                v-for=\"actorName in clickMovieData.actors.actor\" \n                v-bind:key=\"actorName.actorId\">\n                  {{ actorName.actorNm }}, \n              </span> \n          </p>\n\n          <p><a v-bind:href=\"clickMovieData.kmdbUrl\" target=\"blanket\">상세정보</a></p>\n      </div><!--.detailBox-->\n      \n      \n      <br/>\n      <!-- <div style=\"border:2px solid red;\">클릭한 id 영화 데이터: {{ clickMovieData }}</div> -->\n      \n  </div>\n</template>\n\n<script>\nexport default {\n  computed: {\n    clickMovieData() {\n      return this.$store.state.clickMovie;\n    }\n  },\n  methods: {\n    textEdit(text) {\n      // 검색어를 나타내는 !HE, !HS글자 삭제.\n      return text.replace(/!HE|!HS/g, '');\n    },\n    editURL(url) {            \n        if(url === '') {   // url이 없을 경우\n            // poster url주소가 없을 경우 빈 이미지 추출.\n            return 'http://placehold.it/144x86';\n        }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n            return url;\n        }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n            return url.substring(0, url.indexOf('|')); \n        } \n    },\n    // 줄거리 중 제일 앞 문장만 추출.\n    sloganEdit(story) {\n      return story.substring(0, story.indexOf('!')+1);\n    },\n    // 줄거리 중 제일 앞 문장 제외한 나머지 모든 줄거리 추출.\n    storyEdit(story) {\n      return story.substring(story.indexOf('!')+1, story.length)\n    },\n  }\n}\n</script>\n\n<style>\n\n</style>"],"sourceRoot":"src/components"}]}