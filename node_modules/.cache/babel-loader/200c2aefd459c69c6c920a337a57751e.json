{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp_ej/src/components/MovieConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp_ej/src/components/MovieConts.vue","mtime":1591761767975},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZXZlbnRidXMgfSBmcm9tICcuLi9tYWluJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICBpbnB1dFRleHQ6IGZ1bmN0aW9uIGlucHV0VGV4dCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNlYXJjaFR4dEJveC5zZWFyY2hUeHQ7CiAgICB9LAogICAgbW92aWVkYXRhOiBmdW5jdGlvbiBtb3ZpZWRhdGEoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5tb3ZpZWRhdGE7CiAgICB9LAogICAgLy8gZGF0YUluTW92aWVkYXRhKCkgewogICAgLy8gICAgIHJldHVybiB0aGlzLm1vdmllZGF0YS5EYXRhOwogICAgLy8gfSwKICAgIG1vdmllUmVzdWx0OiBmdW5jdGlvbiBtb3ZpZVJlc3VsdCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnJlc3VsdDsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICAvLyDsnbTrsqTtirjrsoTsiqTroZwgbWFpbkNvbnRz7JeQ7IScIOyeheugpe2VnCDqsoDsg4nslrQg67aI65+s7Ji0LgogICAgY29uc29sZS5sb2coJ+ydtOuypO2KuOuyhOyKpCDsnbTsmqntlbTshJwgbW92aWXtjpjsnbTsp4Dsl5DshJwgJG9u7J6R64+Z7ZW07JW865Cc64ukLicpOyAvLyBldmVudGJ1cy4kb24oJ3NlbmRTZWFyY2gnLCAoc2VhcmNoVHh0LCBjaGVjaykgPT4gewogICAgLy8gICAgIGNvbnNvbGUubG9nKHNlYXJjaFR4dCwgY2hlY2spOwogICAgLy8gICAgIHRoaXMubmV3TW92aWUoc2VhcmNoVHh0LCBjaGVjayk7CiAgICAvLyB9KQogICAgLy8g7J2067Kk7Yq467KE7IqkIOyViOuQmOyEnCBpbnB1dO2OmOydtOyngOyXkOyEnCDrsJTroZwgc3RhdGXsl5Ag64Sj7Ja07KSAIOqwkiDqsIDsoLjsmLQuCgogICAgY29uc29sZS5sb2codGhpcy4kc3RvcmUuc3RhdGUuc2VhcmNoVHh0Qm94KTsKICAgIGNvbnNvbGUubG9nKHRoaXMuJHN0b3JlLnN0YXRlLnNlYXJjaFR4dEJveC5jaGVjayk7CiAgICBjb25zb2xlLmxvZyh0aGlzLiRzdG9yZS5zdGF0ZS5zZWFyY2hUeHRCb3guc2VhcmNoVHh0KTsgLy8gY29uc3QgY2hlY2tUeHQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5zZWFyY2hUeHQuY2hlY2s7CiAgICAvLyBjb25zdCBpbnB1dFR4dCA9IHRoaXMuJHN0b3JlLnN0YXRlLnNlYXJjaFR4dC5zZWFyY2hUeHQ7CgogICAgdmFyIHNlYXJjaFR4dEJveCA9IHRoaXMuJHN0b3JlLnN0YXRlLnNlYXJjaFR4dEJveDsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdGRVRDSF9USVRMRScsIHNlYXJjaFR4dEJveCk7IC8vIG1vdmllRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g7J6F66Cl7ZWcIOqygOyDieyWtCDstpTstpwuKOyYge2ZlHR5cGXrj4Qg7ZWo6ruYIOuTpOyWtOyeiOyWtCDqsoDsg4nslrTrp4wg672R7JWE64OEKQogICAgaW5wdXRUZXh0RWRpdDogZnVuY3Rpb24gaW5wdXRUZXh0RWRpdCh0ZXh0KSB7CiAgICAgIHJldHVybiB0ZXh0LnN1YnN0cmluZyh0ZXh0LmluZGV4T2YoJz0nKSArIDEsIHRleHQubGVuZ3RoKTsKICAgIH0sCiAgICAvL21vdmll6rKA7IOJIOqysOqzvCDqsJzsiJjqsIAg7LSdIDEwMOqwnCDsnbTsg4Hsnbwg6rK97JqwIOqwnOyImOyViOuCtO2RnOyLnOulvCAxMDDquYzsp4Drp4wg64KY7YOA64OELgogICAgbW92aWVOdW06IGZ1bmN0aW9uIG1vdmllTnVtKG51bSkgewogICAgICBpZiAobnVtIDw9IDEwMCkgcmV0dXJuIG51bTtlbHNlIGlmIChudW0gPiAxMDApIHJldHVybiAxMDA7CiAgICB9LAogICAgLy8gcG9zdGVyIHVybCDtjrjsp5EuKHVybOydtCDrkZDqsJwg7J207IOB7J28IOqyveyasCDssqvrsojsp7ggdXJs66eMIOy2lOy2nCkKICAgIHBvc3RlclVSTDogZnVuY3Rpb24gcG9zdGVyVVJMKHVybCkgewogICAgICBpZiAodXJsID09PSAnJykgewogICAgICAgIC8vIHVybOydtCDsl4bsnYQg6rK97JqwCiAgICAgICAgLy8gcG9zdGVyIHVybOyjvOyGjOqwgCDsl4bsnYQg6rK97JqwIOu5iCDsnbTrr7jsp4Ag7LaU7LacLgogICAgICAgIHJldHVybiAnaHR0cDovL3BsYWNlaG9sZC5pdC8yMTN4MzAzJzsKICAgICAgfSBlbHNlIGlmICh1cmwuaW5kZXhPZignfCcpID09PSAtMSkgewogICAgICAgIC8vIHVybOydtCAx6rCc7J28IOqyveyasAogICAgICAgIHJldHVybiB1cmw7CiAgICAgIH0gZWxzZSBpZiAodXJsLmluZGV4T2YoJ3wnKSkgewogICAgICAgIC8vIHVybOydtCAy6rCcIOydtOyDgeydvCDqsr3smrAgIAogICAgICAgIC8vIHBvc3RlciB1cmzsnbQg65GQ6rCcIOydtOyDgeydvCDqsr3smrAganBn7J2YIOuniOyngOuniSDquIDsnpDsnbggZ+ydmCBpbmRleOyInOuyiOunjO2BvCDso7zshowg7LaU7LacLgogICAgICAgIC8vICB8IDwtIOydtCDquLDtmLjrpbwg6riw7KSA7Jy866GcIO2WiOuNlOuLiCB1cmwg7KO87IaM6rCAIO2VmOuCmOydvCDqsr3smrAg7KO87IaM6rCAIOyVhOyYiCDsgqzrnbzsoLgg67KE66Ck7IScIGpwZ+q4gOyekOuhnCDtjJDri6jtlbTso7zripQg6rKD7Jy866GcIOyImOyglS4KICAgICAgICAvLyByZXR1cm4gdXJsLnN1YnN0cmluZygwLCB1cmwuaW5kZXhPZih1cmwubWF0Y2goL2cvaSkpICsgMSk7IAogICAgICAgIC8vICd8J+uhnCDquLDspIDsnYQg67CU6r+U7KSMLiDrjIDsi6Ag6riw7KG06rO8IOuLrOumrCAz6rCA7KeA7J2YIOqyveyasOuhnCDrtoTrpZjtlaguIAogICAgICAgIHJldHVybiB1cmwuc3Vic3RyaW5nKDAsIHVybC5pbmRleE9mKCd8JykpOwogICAgICB9CiAgICB9LAogICAgLy8gdGl0bGUsIG5hbWUsIGdlbnJlIO2OuOynkS4KICAgIHRleHRFZGl0OiBmdW5jdGlvbiB0ZXh0RWRpdCh0ZXh0KSB7CiAgICAgIC8vIOqygOyDieyWtOulvCDrgpjtg4DrgrTripQgIUhFLCAhSFPquIDsnpAg7IKt7KCcLgogICAgICByZXR1cm4gdGV4dC5yZXBsYWNlKC8hSEV8IUhTL2csICcnKTsKICAgIH0sCiAgICAvLyDstpzsl7Ag67Cw7Jqw6rCAIOunjuydhCDqsr3smrAgNeuqheq5jOyngOunjCDstpTstpztlZjqs6Ag7Iu27J2MLgogICAgLy8gYWN0b3JLZXkoYWN0b3IpIHsKICAgIC8vICAgICBpZihhY3RvcikgCiAgICAvLyB9LAogICAgLy8g64uk7IucIOqygOyDie2VmOq4sCDrsoTtirwg7YG066atIOyLnCBtYWlu7Y6Y7J207KeA66GcIOydtOuPmS4KICAgIGdvTWFpbjogZnVuY3Rpb24gZ29NYWluKCkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL21haW4nKTsKICAgIH0sCiAgICAvLyBwb3N0ZXLtgbTrpq0g7IucIOyEuOu2gCDsoJXrs7Qg7Y6Y7J207KeAKEluZm9ybVBhZ2Up66GcIOydtOuPmS4KICAgIG1vdmVJbmZvcm06IGZ1bmN0aW9uIG1vdmVJbmZvcm0obW92aWUpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdDTElDS19NT1ZJRScsIG1vdmllKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9pbmZvcm0nKTsKICAgIH0gLy8gbW92aWVkYXRhKCkgewogICAgLy8gICAgIHRoaXMuJHN0b3JlLnN0YXRlLnJlc3VsdDsKICAgIC8vICAgICAvLyDrjbDsnbTthLDrp4zrk6TslrTshJwg6re4IOydtOumhCDslYjsl5Ag7J20IOqwkuydhCDspJjrs7TsnpAuCiAgICAvLyB9LAogICAgLy8gc3Bh66GcIOygnOyeke2VmOugpOuLiCDsnITsnZggY3JlYXRlZOyXkOyEnCDsnbTrsqTtirjrsoTsiqTroZwg67Cb7JWE7Jik64qU6rKMIOyekeuPmeydtCDslYjrkJjslrTshJwsIOyVhOyYiCDsnbTrsqTtirjrsoTsiqTrpbwg7IKs7Jqp7ZWY7KeAIOyViuydjC4KICAgIC8vIOuUsOudvOyEnCwg7JWE656Y7J2YIG5ld01vdmllKCntlajsiJgg7KO87ISd7LKY66asIO2VnCDqsoMuCiAgICAvLyBuZXdNb3ZpZShzZWFyY2hUeHQsIGNoZWNrKSB7CiAgICAvLyAgICAgY29uc29sZS5sb2coc2VhcmNoVHh0LCBjaGVjayk7CiAgICAvLyAgICAgY29uc29sZS5sb2coJ+yYge2ZlCDqsoDsg4nslrQg67Cb7JWY64ukISEhIScpOwogICAgLy8gICAgIGNvbnN0IHR4dENoZWNrID0ge3NlYXJjaFR4dCwgY2hlY2t9OwogICAgLy8gICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdGRVRDSF9USVRMRScsIHR4dENoZWNrKQogICAgLy8gfQoKICB9IC8vIGNyZWF0ZWQoKSB7CiAgLy8gICAgIGF4aW9zCiAgLy8gICAgIC5nZXQoJyBodHRwOi8vYXBpLmtvcmVhZmlsbS5vci5rci9vcGVuYXBpLWRhdGEyL3dpc2VudXQvc2VhcmNoX2FwaS9zZWFyY2hfeG1sMi5qc3A/Y29sbGVjdGlvbj1rbWRiX25ldzImZGV0YWlsPU4mZGlyZWN0PSVFQiVCMCU5NSVFQyVCMCVBQyVFQyU5QSVCMSZTZXJ2aWNlS2V5PU0xTlYxQjExMDFIWjMyODJUUlBXJykKICAvLyAgICAgLnRoZW4ocmVzID0+IHsKICAvLyAgICAgICAgIHRoaXMubW92aWVEYXRhID0gcmVzLmRhdGE7CiAgLy8gICAgIH0pOwogIC8vIH0KCn07"},{"version":3,"sources":["MovieConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,SAAA,QAAA,QAAA,SAAA;AAEA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA,CAAA,SAAA;AACA,KAHA;AAIA,IAAA,SAJA,uBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KANA;AAOA;AACA;AACA;AACA,IAAA,WAVA,yBAUA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA;AAZA,GADA;AAeA,EAAA,OAfA,qBAeA;AACA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,kCAAA,EAFA,CAIA;AACA;AACA;AACA;AAEA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA,CAAA,KAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA,CAAA,SAAA,EAZA,CAaA;AACA;;AAEA,QAAA,YAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,YAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,YAAA,EAjBA,CAmBA;AAEA,GApCA;AAqCA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,aAFA,yBAEA,IAFA,EAEA;AACA,aAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,OAAA,CAAA,GAAA,IAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA;AACA,KAJA;AAKA;AACA,IAAA,QANA,oBAMA,GANA,EAMA;AACA,UAAA,GAAA,IAAA,GAAA,EAAA,OAAA,GAAA,CAAA,KACA,IAAA,GAAA,GAAA,GAAA,EAAA,OAAA,GAAA;AACA,KATA;AAUA;AACA,IAAA,SAXA,qBAWA,GAXA,EAWA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA;AAAA;AACA;AACA,eAAA,6BAAA;AACA,OAHA,MAGA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAAA;AACA;AACA;AACA;AACA;AACA,eAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA,KAxBA;AAyBA;AACA,IAAA,QA1BA,oBA0BA,IA1BA,EA0BA;AACA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AACA,KA7BA;AA8BA;AACA;AACA;AACA;AAEA;AACA,IAAA,MApCA,oBAoCA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KAtCA;AAuCA;AACA,IAAA,UAxCA,sBAwCA,KAxCA,EAwCA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,SAAA;AACA,KA3CA,CA6CA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AA3DA,GArCA,CAmGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAzGA,CAAA","sourcesContent":["<template>\n  <div class=\"movieConts\">\n    <button class=\"gomainBtn\" @click.prevent=\"goMain\">\n        <span class=\"arrow\">← </span> \n        <span class=\"text\"> 검색 페이지로</span>\n    </button>\n\n    <!-- 검색한 단어 출력 -->\n    <h2>{{ inputTextEdit(inputText) }}</h2>\n    \n    <div class=\"movieNumBox\">\n        <p>총 {{ movieNum(moviedata.TotalCount) }}개의 영화가 검색되었습니다.</p>\n        <p>( 오른쪽으로 스크롤 하면 순서대로 모든 영화 목록을 볼 수 있습니다. )</p>\n    </div>\n\n    <div class=\"dataBox clear\">\n        <div class=\"movies clear\" v-if=\"movieResult\"> \n            <!-- v-if를 줘서 영화 데이터가 존재할 때만 영화 정보 박스(.movies)를 보이게 함. + movieResult속에 있는 데이터들 사용하려면 적어줘야함.(왜그런지는 모르겠다..) -->\n            <div \n                class=\"movieBox\"\n                v-for=\"(movie, index) in movieResult \" \n                v-bind:key=\"index\"\n            >\n                <div class=\"imgTitle\" @click=\"moveInform(movie)\">\n                    <img                     \n                        v-bind:src=\"posterURL(movie.posters)\" \n                        v-bind:alt=\"textEdit(movie.title)\"\n                    />\n\n                    <div class=\"hoverBox\">\n                        <!-- <p class=\"title\">{{ textEdit(movie.title) }}<br/>( {{ movie.prodYear }} )</p> -->\n                        <p class=\"director\">감독: {{ textEdit(movie.directors.director[0].directorNm) }}</p>\n                        <p class=\"story\" v-if=\"movie.plots.plot[0].plotText !== ''\">줄거리: {{ movie.plots.plot[0].plotText }}</p>\n                    </div>\n                </div>\n\n                <p class=\"title\">\n                    <span>{{ textEdit(movie.title) }}</span>\n                    <span class=\"year\">( {{ movie.prodYear }} )</span>\n                </p>\n            </div><!--.movieBox-->\n        </div><!--.movies-->\n\n        <p class=\"nodataTxt\" v-else>해당하는 영화가 없습니다.</p>\n    </div><!--.dataBox-->\n    \n    <br/><br/>\n    <!-- {{ moviedata }} -->\n  </div><!--.movieConts-->\n</template>\n\n<script>\nimport { eventbus } from '../main';\n\nexport default {\n    computed: {\n        inputText() {\n            return this.$store.state.searchTxtBox.searchTxt;\n        },\n        moviedata() {\n            return this.$store.state.moviedata;\n        },\n        // dataInMoviedata() {\n        //     return this.moviedata.Data;\n        // },\n        movieResult() {\n            return this.$store.state.result;\n        },\n    },\n    created() {\n        // 이벤트버스로 mainConts에서 입력한 검색어 불러옴.\n        console.log('이벤트버스 이용해서 movie페이지에서 $on작동해야된다.');\n        \n        // eventbus.$on('sendSearch', (searchTxt, check) => {\n        //     console.log(searchTxt, check);\n        //     this.newMovie(searchTxt, check);\n        // })\n\n        // 이벤트버스 안되서 input페이지에서 바로 state에 넣어준 값 가져옴.\n        console.log(this.$store.state.searchTxtBox);\n        console.log(this.$store.state.searchTxtBox.check);\n        console.log(this.$store.state.searchTxtBox.searchTxt);\n        // const checkTxt = this.$store.state.searchTxt.check;\n        // const inputTxt = this.$store.state.searchTxt.searchTxt;\n\n        const searchTxtBox = this.$store.state.searchTxtBox;\n        this.$store.dispatch('FETCH_TITLE', searchTxtBox);\n\n        // movieData();\n\n    },\n    methods: {\n        // 입력한 검색어 추출.(영화type도 함께 들어있어 검색어만 뽑아냄)\n        inputTextEdit(text) {\n            return text.substring(text.indexOf('=')+1, text.length);\n        },\n        //movie검색 결과 개수가 총 100개 이상일 경우 개수안내표시를 100까지만 나타냄.\n        movieNum(num) {\n            if(num <= 100) return num;\n            else if(num > 100) return 100;\n        },\n        // poster url 편집.(url이 두개 이상일 경우 첫번째 url만 추출)\n        posterURL(url) {            \n            if(url === '') {   // url이 없을 경우\n                // poster url주소가 없을 경우 빈 이미지 추출.\n                return 'http://placehold.it/213x303';\n            }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n                return url;\n            }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n                // poster url이 두개 이상일 경우 jpg의 마지막 글자인 g의 index순번만큼 주소 추출.\n                //  | <- 이 기호를 기준으로 했더니 url 주소가 하나일 경우 주소가 아예 사라져 버려서 jpg글자로 판단해주는 것으로 수정.\n                // return url.substring(0, url.indexOf(url.match(/g/i)) + 1); \n                // '|'로 기준을 바꿔줌. 대신 기존과 달리 3가지의 경우로 분류함. \n                return url.substring(0, url.indexOf('|')); \n            } \n        },\n        // title, name, genre 편집.\n        textEdit(text) {\n            // 검색어를 나타내는 !HE, !HS글자 삭제.\n            return text.replace(/!HE|!HS/g, '');\n        },\n        // 출연 배우가 많을 경우 5명까지만 추출하고 싶음.\n        // actorKey(actor) {\n        //     if(actor) \n        // },\n\n        // 다시 검색하기 버튼 클릭 시 main페이지로 이동.\n        goMain() {\n            this.$router.push('/main');\n        },\n        // poster클릭 시 세부 정보 페이지(InformPage)로 이동.\n        moveInform(movie) {\n            this.$store.commit('CLICK_MOVIE', movie); \n            this.$router.push('/inform');\n        }\n\n        // moviedata() {\n        //     this.$store.state.result;\n            \n        //     // 데이터만들어서 그 이름 안에 이 값을 줘보자.\n        // },\n        // spa로 제작하려니 위의 created에서 이벤트버스로 받아오는게 작동이 안되어서, 아예 이벤트버스를 사용하지 않음.\n        // 따라서, 아래의 newMovie()함수 주석처리 한 것.\n\n        // newMovie(searchTxt, check) {\n        //     console.log(searchTxt, check);\n            \n        //     console.log('영화 검색어 받았다!!!!');\n        //     const txtCheck = {searchTxt, check};\n        //     this.$store.dispatch('FETCH_TITLE', txtCheck)\n        // }\n    }\n\n    // created() {\n    //     axios\n    //     .get(' http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_xml2.jsp?collection=kmdb_new2&detail=N&direct=%EB%B0%95%EC%B0%AC%EC%9A%B1&ServiceKey=M1NV1B1101HZ3282TRPW')\n    //     .then(res => {\n    //         this.movieData = res.data;\n    //     });\n    // }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}