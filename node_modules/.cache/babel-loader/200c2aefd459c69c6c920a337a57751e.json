{"remainingRequest":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eunjae/Desktop/github/movieApp_ej/src/components/MovieConts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/eunjae/Desktop/github/movieApp_ej/src/components/MovieConts.vue","mtime":1591071296350},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/babel-loader/lib/index.js","mtime":1591071293737},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/cache-loader/dist/cjs.js","mtime":1591071293823},{"path":"/Users/eunjae/Desktop/github/movieApp_ej/node_modules/vue-loader/lib/index.js","mtime":1591071296053}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5kZXgtb2YiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgZXZlbnRidXMgfSBmcm9tICcuLi9tYWluJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXB1dGVkOiB7CiAgICBtb3ZpZWRhdGE6IGZ1bmN0aW9uIG1vdmllZGF0YSgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLm1vdmllZGF0YTsKICAgIH0sCiAgICAvLyBkYXRhSW5Nb3ZpZWRhdGEoKSB7CiAgICAvLyAgICAgcmV0dXJuIHRoaXMubW92aWVkYXRhLkRhdGE7CiAgICAvLyB9LAogICAgbW92aWVSZXN1bHQ6IGZ1bmN0aW9uIG1vdmllUmVzdWx0KCkgewogICAgICByZXR1cm4gdGhpcy4kc3RvcmUuc3RhdGUucmVzdWx0OwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOydtOuypO2KuOuyhOyKpOuhnCBtYWluQ29udHPsl5DshJwg7J6F66Cl7ZWcIOqygOyDieyWtCDrtojrn6zsmLQuCiAgICBjb25zb2xlLmxvZygn7J2067Kk7Yq467KE7IqkIOydtOyaqe2VtOyEnCBtb3ZpZe2OmOydtOyngOyXkOyEnCAkb27snpHrj5ntlbTslbzrkJzri6QuJyk7IC8vIGV2ZW50YnVzLiRvbignc2VuZFNlYXJjaCcsIChzZWFyY2hUeHQsIGNoZWNrKSA9PiB7CiAgICAvLyAgICAgY29uc29sZS5sb2coc2VhcmNoVHh0LCBjaGVjayk7CiAgICAvLyAgICAgdGhpcy5uZXdNb3ZpZShzZWFyY2hUeHQsIGNoZWNrKTsKICAgIC8vIH0pCiAgICAvLyDsnbTrsqTtirjrsoTsiqQg7JWI65CY7IScIGlucHV07Y6Y7J207KeA7JeQ7IScIOuwlOuhnCBzdGF0ZeyXkCDrhKPslrTspIAg6rCSIOqwgOyguOyYtC4KCiAgICBjb25zb2xlLmxvZyh0aGlzLiRzdG9yZS5zdGF0ZS5zZWFyY2hUeHQpOwogICAgY29uc29sZS5sb2codGhpcy4kc3RvcmUuc3RhdGUuc2VhcmNoVHh0LmNoZWNrKTsKICAgIGNvbnNvbGUubG9nKHRoaXMuJHN0b3JlLnN0YXRlLnNlYXJjaFR4dC5zZWFyY2hUeHQpOyAvLyBjb25zdCBjaGVja1R4dCA9IHRoaXMuJHN0b3JlLnN0YXRlLnNlYXJjaFR4dC5jaGVjazsKICAgIC8vIGNvbnN0IGlucHV0VHh0ID0gdGhpcy4kc3RvcmUuc3RhdGUuc2VhcmNoVHh0LnNlYXJjaFR4dDsKCiAgICB2YXIgc2VhcmNoVHh0ID0gdGhpcy4kc3RvcmUuc3RhdGUuc2VhcmNoVHh0OwogICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0ZFVENIX1RJVExFJywgc2VhcmNoVHh0KTsgLy8gbW92aWVEYXRhKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBwb3N0ZXIgdXJsIO2OuOynkS4odXJs7J20IOuRkOqwnCDsnbTsg4Hsnbwg6rK97JqwIOyyq+uyiOynuCB1cmzrp4wg7LaU7LacKQogICAgcG9zdGVyVVJMOiBmdW5jdGlvbiBwb3N0ZXJVUkwodXJsKSB7CiAgICAgIGlmICh1cmwgPT09ICcnKSB7CiAgICAgICAgLy8gdXJs7J20IOyXhuydhCDqsr3smrAKICAgICAgICAvLyBwb3N0ZXIgdXJs7KO87IaM6rCAIOyXhuydhCDqsr3smrAg67mIIOydtOuvuOyngCDstpTstpwuCiAgICAgICAgcmV0dXJuICdodHRwOi8vcGxhY2Vob2xkLml0LzIxM3gzMDMnOwogICAgICB9IGVsc2UgaWYgKHVybC5pbmRleE9mKCd8JykgPT09IC0xKSB7CiAgICAgICAgLy8gdXJs7J20IDHqsJzsnbwg6rK97JqwCiAgICAgICAgcmV0dXJuIHVybDsKICAgICAgfSBlbHNlIGlmICh1cmwuaW5kZXhPZignfCcpKSB7CiAgICAgICAgLy8gdXJs7J20IDLqsJwg7J207IOB7J28IOqyveyasCAgCiAgICAgICAgLy8gcG9zdGVyIHVybOydtCDrkZDqsJwg7J207IOB7J28IOqyveyasCBqcGfsnZgg66eI7KeA66eJIOq4gOyekOyduCBn7J2YIGluZGV47Iic67KI66eM7YG8IOyjvOyGjCDstpTstpwuCiAgICAgICAgLy8gIHwgPC0g7J20IOq4sO2YuOulvCDquLDspIDsnLzroZwg7ZaI642U64uIIHVybCDso7zshozqsIAg7ZWY64KY7J28IOqyveyasCDso7zshozqsIAg7JWE7JiIIOyCrOudvOyguCDrsoTroKTshJwganBn6riA7J6Q66GcIO2MkOuLqO2VtOyjvOuKlCDqsoPsnLzroZwg7IiY7KCVLgogICAgICAgIC8vIHJldHVybiB1cmwuc3Vic3RyaW5nKDAsIHVybC5pbmRleE9mKHVybC5tYXRjaCgvZy9pKSkgKyAxKTsgCiAgICAgICAgLy8gJ3wn66GcIOq4sOykgOydhCDrsJTqv5TspIwuIOuMgOyLoCDquLDsobTqs7wg64us66asIDPqsIDsp4DsnZgg6rK97Jqw66GcIOu2hOulmO2VqC4gCiAgICAgICAgcmV0dXJuIHVybC5zdWJzdHJpbmcoMCwgdXJsLmluZGV4T2YoJ3wnKSk7CiAgICAgIH0KICAgIH0sCiAgICAvLyB0aXRsZSwgbmFtZSwgZ2VucmUg7Y647KeRLgogICAgdGV4dEVkaXQ6IGZ1bmN0aW9uIHRleHRFZGl0KHRleHQpIHsKICAgICAgLy8g6rKA7IOJ7Ja066W8IOuCmO2DgOuCtOuKlCAhSEUsICFIU+q4gOyekCDsgq3soJwuCiAgICAgIHJldHVybiB0ZXh0LnJlcGxhY2UoLyFIRXwhSFMvZywgJycpOwogICAgfSwKICAgIC8vIOy2nOyXsCDrsLDsmrDqsIAg66eO7J2EIOqyveyasCA166qF6rmM7KeA66eMIOy2lOy2nO2VmOqzoCDsi7bsnYwuCiAgICAvLyBhY3RvcktleShhY3RvcikgewogICAgLy8gICAgIGlmKGFjdG9yKSAKICAgIC8vIH0sCiAgICAvLyDri6Tsi5wg6rKA7IOJ7ZWY6riwIOuyhO2KvCDtgbTrpq0g7IucIG1haW7tjpjsnbTsp4DroZwg7J2064+ZLgogICAgZ29NYWluOiBmdW5jdGlvbiBnb01haW4oKSB7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvbWFpbicpOwogICAgfSwKICAgIC8vIHBvc3Rlcu2BtOumrSDsi5wg7IS467aAIOygleuztCDtjpjsnbTsp4AoSW5mb3JtUGFnZSnroZwg7J2064+ZLgogICAgbW92ZUluZm9ybTogZnVuY3Rpb24gbW92ZUluZm9ybShtb3ZpZSkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ0NMSUNLX01PVklFJywgbW92aWUpOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL2luZm9ybScpOwogICAgfSAvLyBtb3ZpZWRhdGEoKSB7CiAgICAvLyAgICAgdGhpcy4kc3RvcmUuc3RhdGUucmVzdWx0OwogICAgLy8gICAgIC8vIOuNsOydtO2EsOunjOuTpOyWtOyEnCDqt7gg7J2066aEIOyViOyXkCDsnbQg6rCS7J2EIOykmOuztOyekC4KICAgIC8vIH0sCiAgICAvLyBzcGHroZwg7KCc7J6R7ZWY66Ck64uIIOychOydmCBjcmVhdGVk7JeQ7IScIOydtOuypO2KuOuyhOyKpOuhnCDrsJvslYTsmKTripTqsowg7J6R64+Z7J20IOyViOuQmOyWtOyEnCwg7JWE7JiIIOydtOuypO2KuOuyhOyKpOulvCDsgqzsmqntlZjsp4Ag7JWK7J2MLgogICAgLy8g65Sw65287IScLCDslYTrnpjsnZggbmV3TW92aWUoKe2VqOyImCDso7zshJ3sspjrpqwg7ZWcIOqygy4KICAgIC8vIG5ld01vdmllKHNlYXJjaFR4dCwgY2hlY2spIHsKICAgIC8vICAgICBjb25zb2xlLmxvZyhzZWFyY2hUeHQsIGNoZWNrKTsKICAgIC8vICAgICBjb25zb2xlLmxvZygn7JiB7ZmUIOqygOyDieyWtCDrsJvslZjri6QhISEhJyk7CiAgICAvLyAgICAgY29uc3QgdHh0Q2hlY2sgPSB7c2VhcmNoVHh0LCBjaGVja307CiAgICAvLyAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ0ZFVENIX1RJVExFJywgdHh0Q2hlY2spCiAgICAvLyB9CgogIH0gLy8gY3JlYXRlZCgpIHsKICAvLyAgICAgYXhpb3MKICAvLyAgICAgLmdldCgnIGh0dHA6Ly9hcGkua29yZWFmaWxtLm9yLmtyL29wZW5hcGktZGF0YTIvd2lzZW51dC9zZWFyY2hfYXBpL3NlYXJjaF94bWwyLmpzcD9jb2xsZWN0aW9uPWttZGJfbmV3MiZkZXRhaWw9TiZkaXJlY3Q9JUVCJUIwJTk1JUVDJUIwJUFDJUVDJTlBJUIxJlNlcnZpY2VLZXk9TTFOVjFCMTEwMUhaMzI4MlRSUFcnKQogIC8vICAgICAudGhlbihyZXMgPT4gewogIC8vICAgICAgICAgdGhpcy5tb3ZpZURhdGEgPSByZXMuZGF0YTsKICAvLyAgICAgfSk7CiAgLy8gfQoKfTs="},{"version":3,"sources":["MovieConts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,SAAA,QAAA,QAAA,SAAA;AAEA,eAAA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,KAHA;AAIA;AACA;AACA;AACA,IAAA,WAPA,yBAOA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA;AATA,GADA;AAYA,EAAA,OAZA,qBAYA;AACA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,kCAAA,EAFA,CAIA;AACA;AACA;AACA;AAEA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,KAAA;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA,CAAA,SAAA,EAZA,CAaA;AACA;;AAEA,QAAA,SAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,SAAA;AACA,SAAA,MAAA,CAAA,QAAA,CAAA,aAAA,EAAA,SAAA,EAjBA,CAmBA;AAEA,GAjCA;AAkCA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,SAFA,qBAEA,GAFA,EAEA;AACA,UAAA,GAAA,KAAA,EAAA,EAAA;AAAA;AACA;AACA,eAAA,6BAAA;AACA,OAHA,MAGA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AAAA;AACA,eAAA,GAAA;AACA,OAFA,MAEA,IAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,EAAA;AAAA;AACA;AACA;AACA;AACA;AACA,eAAA,GAAA,CAAA,SAAA,CAAA,CAAA,EAAA,GAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA;AACA,KAfA;AAgBA;AACA,IAAA,QAjBA,oBAiBA,IAjBA,EAiBA;AACA;AACA,aAAA,IAAA,CAAA,OAAA,CAAA,UAAA,EAAA,EAAA,CAAA;AACA,KApBA;AAqBA;AACA;AACA;AACA;AAEA;AACA,IAAA,MA3BA,oBA2BA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KA7BA;AA8BA;AACA,IAAA,UA/BA,sBA+BA,KA/BA,EA+BA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,SAAA;AACA,KAlCA,CAoCA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAlDA,GAlCA,CAuFA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7FA,CAAA","sourcesContent":["<template>\n  <div class=\"movieConts\">\n    <button class=\"gomainBtn\" @click.prevent=\"goMain\">← 다시 검색하기</button>\n      <!-- 검색한 단어 출력 -->\n    <h2>\" {{ moviedata.KMAQuery }} \"</h2>\n\n    <div class=\"dataBox clear\">\n        <div class=\"movies\" v-if=\"movieResult\"> \n            <!-- v-if를 줘서 영화 데이터가 존재할 때만 영화 정보 박스(.movies)를 보이게 함. + movieResult속에 있는 데이터들 사용하려면 적어줘야함.(왜그런지는 모르겠다..) -->\n            <div \n                class=\"movieBox\"\n                v-for=\"(movie, index) in movieResult \" \n                v-bind:key=\"index\"\n            >\n                <div class=\"imgTitle\" @click=\"moveInform(movie)\">\n                    <img                     \n                        v-bind:src=\"posterURL(movie.posters)\" \n                        v-bind:alt=\"textEdit(movie.title)\"\n                    />\n\n                    <div class=\"hoverBox\">\n                        <p class=\"title\">{{ textEdit(movie.title) }}<br/>( {{ movie.prodYear }} )</p>\n                        <p class=\"director\">감독: {{ textEdit(movie.directors.director[0].directorNm) }}</p>\n                        <p class=\"story\" v-if=\"movie.plots.plot[0].plotText !== ''\">줄거리: {{ movie.plots.plot[0].plotText }}</p>\n                    </div>\n                </div>\n            </div><!--.movieBox-->\n        </div><!--.movies-->\n\n        <p class=\"nodataTxt\" v-else>해당하는 영화가 없습니다.</p>\n    </div><!--.dataBox-->\n    \n    <br/><br/>\n    <!-- {{ moviedata }} -->\n  </div><!--.movieConts-->\n</template>\n\n<script>\nimport { eventbus } from '../main';\n\nexport default {\n    computed: {\n        moviedata() {\n            return this.$store.state.moviedata;\n        },\n        // dataInMoviedata() {\n        //     return this.moviedata.Data;\n        // },\n        movieResult() {\n            return this.$store.state.result;\n        },\n    },\n    created() {\n        // 이벤트버스로 mainConts에서 입력한 검색어 불러옴.\n        console.log('이벤트버스 이용해서 movie페이지에서 $on작동해야된다.');\n        \n        // eventbus.$on('sendSearch', (searchTxt, check) => {\n        //     console.log(searchTxt, check);\n        //     this.newMovie(searchTxt, check);\n        // })\n\n        // 이벤트버스 안되서 input페이지에서 바로 state에 넣어준 값 가져옴.\n        console.log(this.$store.state.searchTxt);\n        console.log(this.$store.state.searchTxt.check);\n        console.log(this.$store.state.searchTxt.searchTxt);\n        // const checkTxt = this.$store.state.searchTxt.check;\n        // const inputTxt = this.$store.state.searchTxt.searchTxt;\n\n        const searchTxt = this.$store.state.searchTxt;\n        this.$store.dispatch('FETCH_TITLE', searchTxt);\n\n        // movieData();\n\n    },\n    methods: {\n        // poster url 편집.(url이 두개 이상일 경우 첫번째 url만 추출)\n        posterURL(url) {            \n            if(url === '') {   // url이 없을 경우\n                // poster url주소가 없을 경우 빈 이미지 추출.\n                return 'http://placehold.it/213x303';\n            }else if(url.indexOf('|') === -1) {   // url이 1개일 경우\n                return url;\n            }else if(url.indexOf('|')) {   // url이 2개 이상일 경우  \n                // poster url이 두개 이상일 경우 jpg의 마지막 글자인 g의 index순번만큼 주소 추출.\n                //  | <- 이 기호를 기준으로 했더니 url 주소가 하나일 경우 주소가 아예 사라져 버려서 jpg글자로 판단해주는 것으로 수정.\n                // return url.substring(0, url.indexOf(url.match(/g/i)) + 1); \n                // '|'로 기준을 바꿔줌. 대신 기존과 달리 3가지의 경우로 분류함. \n                return url.substring(0, url.indexOf('|')); \n            } \n        },\n        // title, name, genre 편집.\n        textEdit(text) {\n            // 검색어를 나타내는 !HE, !HS글자 삭제.\n            return text.replace(/!HE|!HS/g, '');\n        },\n        // 출연 배우가 많을 경우 5명까지만 추출하고 싶음.\n        // actorKey(actor) {\n        //     if(actor) \n        // },\n\n        // 다시 검색하기 버튼 클릭 시 main페이지로 이동.\n        goMain() {\n            this.$router.push('/main');\n        },\n        // poster클릭 시 세부 정보 페이지(InformPage)로 이동.\n        moveInform(movie) {\n            this.$store.commit('CLICK_MOVIE', movie);\n            this.$router.push('/inform');\n        }\n\n        // moviedata() {\n        //     this.$store.state.result;\n            \n        //     // 데이터만들어서 그 이름 안에 이 값을 줘보자.\n        // },\n        // spa로 제작하려니 위의 created에서 이벤트버스로 받아오는게 작동이 안되어서, 아예 이벤트버스를 사용하지 않음.\n        // 따라서, 아래의 newMovie()함수 주석처리 한 것.\n\n        // newMovie(searchTxt, check) {\n        //     console.log(searchTxt, check);\n            \n        //     console.log('영화 검색어 받았다!!!!');\n        //     const txtCheck = {searchTxt, check};\n        //     this.$store.dispatch('FETCH_TITLE', txtCheck)\n        // }\n    }\n\n    // created() {\n    //     axios\n    //     .get(' http://api.koreafilm.or.kr/openapi-data2/wisenut/search_api/search_xml2.jsp?collection=kmdb_new2&detail=N&direct=%EB%B0%95%EC%B0%AC%EC%9A%B1&ServiceKey=M1NV1B1101HZ3282TRPW')\n    //     .then(res => {\n    //         this.movieData = res.data;\n    //     });\n    // }\n}\n</script>\n\n<style scoped>\n\n</style>"],"sourceRoot":"src/components"}]}